{
  "elements": {
    "6629d419-36fd-42f9-8dff-431b497f5a4f": {
      "datasourceId": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "6629d419-36fd-42f9-8dff-431b497f5a4f",
      "name": "Gas Rotary GR1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "Rotary GR1",
        "headerStyle": {
          "color": "black"
        },
        "id": 1,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Stopped",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "420px",
      "y": "565px",
      "z": "10"
    },
    "0e3cf34b-0951-4a6c-b81c-3e14f2c0de7d": {
      "datasourceId": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "0e3cf34b-0951-4a6c-b81c-3e14f2c0de7d",
      "name": "Gas TMP",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "TMP",
        "headerStyle": {
          "color": "black"
        },
        "id": 3,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Started",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "750px",
      "y": "515px",
      "z": "10"
    },
    "02318531-9851-4e55-9430-d12b294ba275": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "02318531-9851-4e55-9430-d12b294ba275",
      "name": "Gas Valve G2 V11",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V11",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 11,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 11,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "220px",
      "y": "190px",
      "z": "10"
    },
    "b1b64a3f-ff21-4e96-a441-b41bda247be2": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "b1b64a3f-ff21-4e96-a441-b41bda247be2",
      "name": "Gas Valve Tank6 V13",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V13",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "13",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 13,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "870px",
      "y": "315px",
      "z": "10"
    },
    "745cc759-be71-48fa-843a-1aaa7419db53": {
      "datasourceId": "56b9f592-2abe-493e-9240-25925cfb6f12",
      "h": "auto",
      "id": "745cc759-be71-48fa-843a-1aaa7419db53",
      "name": "Pipe",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "src": "./pipe.png"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Image",
      "w": "auto",
      "x": "0px",
      "y": "65px",
      "z": "1"
    },
    "09028476-7433-4424-841c-3021ab0cb1a3": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "09028476-7433-4424-841c-3021ab0cb1a3",
      "name": "Gas Valve G1 V12",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V12",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 12,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 12,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "120px",
      "y": "190px",
      "z": "12"
    },
    "f7ee4a75-179d-4072-bae8-22bb02788bba": {
      "datasourceId": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "f7ee4a75-179d-4072-bae8-22bb02788bba",
      "name": "Vacuum Gauge 1G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge 1G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "2",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 2,
        "row_name": "id",
        "text": "89.5091",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "865px",
      "z": 10
    },
    "36b4ad6b-9b73-499e-8101-cce214763b89": {
      "datasourceId": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "36b4ad6b-9b73-499e-8101-cce214763b89",
      "name": "Gas Rotary 2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "Rotary GR2",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Accelerating",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "120px",
      "y": "565px",
      "z": "10"
    },
    "03d9bd25-f49a-4ce8-8b85-cc688d271eb6": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "03d9bd25-f49a-4ce8-8b85-cc688d271eb6",
      "name": "Vacuum Valve 1V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "1V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "6",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 6,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "220px",
      "y": "765px",
      "z": "10"
    },
    "f9492cf9-0cab-4bfc-9488-ff78213f657e": {
      "datasourceId": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "f9492cf9-0cab-4bfc-9488-ff78213f657e",
      "name": "Vacuum Pump - TMP VT2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "columnNameFooter": "speed",
        "footerStyle": {
          "backgroundColor": "white",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "header": "TMP VT2",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Stopped",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "470px",
      "y": "665px",
      "z": "10"
    },
    "2c2549cd-169e-4572-b82f-b4cd873c724e": {
      "datasourceId": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "2c2549cd-169e-4572-b82f-b4cd873c724e",
      "name": "MFC2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "percentage",
        "header": "MFC 2",
        "id": 2,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "rowId": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 16,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "650px",
      "y": "110px",
      "z": "10"
    },
    "307bb7c7-599f-4889-8e1f-85db050a13ad": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "307bb7c7-599f-4889-8e1f-85db050a13ad",
      "name": "Vacuum Vave 2V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "2V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "3",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 3,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "695px",
      "y": "665px",
      "z": "10"
    },
    "9819dc04-99c1-4486-9e49-f2db2afb41d7": {
      "datasourceId": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "9819dc04-99c1-4486-9e49-f2db2afb41d7",
      "name": "Vacuum Pump - Rotary VR1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "Rotary VR1",
        "headerStyle": {
          "color": "black"
        },
        "id": 3,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Tripped",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "765px",
      "z": "10"
    },
    "537b30ff-675d-4fcd-9450-47d99e21cd42": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "537b30ff-675d-4fcd-9450-47d99e21cd42",
      "name": "Gas Gauge G3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G3",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "3",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 3,
        "row_name": "id",
        "text": "85.4105",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "110%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "320px",
      "y": "110px",
      "z": 10
    },
    "370ee4a8-511a-4e76-be1d-5004ba43907a": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "370ee4a8-511a-4e76-be1d-5004ba43907a",
      "name": "Gas Valve Tank3 V8",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "header": "V8",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 8,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 8,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "540px",
      "y": "315px",
      "z": "10"
    },
    "ced973b9-cf68-4442-b316-d8c96425eb8a": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "ced973b9-cf68-4442-b316-d8c96425eb8a",
      "name": "Gas Valve Tank1 V7",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V7",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 7,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 7,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "340px",
      "y": "315px",
      "z": "10"
    },
    "20942c4d-ec44-4bd9-be59-ea1797439966": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "20942c4d-ec44-4bd9-be59-ea1797439966",
      "name": "Gas Valve V14",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V14",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "15",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 14,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "850px",
      "y": "410px",
      "z": "10"
    },
    "bb010823-fde8-4913-a9ea-26b938fb8196": {
      "datasourceId": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "bb010823-fde8-4913-a9ea-26b938fb8196",
      "name": "MFC4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "percentage",
        "header": "MFC 4",
        "id": 4,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "rowId": 4,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 9,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "900px",
      "y": "110px",
      "z": "10"
    },
    "be4ab110-d34a-474d-8af2-ff263659a362": {
      "datasourceId": "",
      "h": "100px",
      "id": "be4ab110-d34a-474d-8af2-ff263659a362",
      "name": "Valve - Needle",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "header": "Valve",
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "needle",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "450px",
      "y": "110px",
      "z": "10"
    },
    "f087a1cd-9769-455b-b10e-d6bafe877138": {
      "datasourceId": "35c97759-90d2-4748-adbb-8a6c37e54336",
      "h": "",
      "id": "f087a1cd-9769-455b-b10e-d6bafe877138",
      "name": "Dialog MFC",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "100px"
        },
        "bsSize": "small",
        "header": "MFC 3",
        "onOK": "0d6e3d38-f5f6-40f7-9a53-be3b4e7a4c4a",
        "textOK": "Set flow percentage"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "0",
      "y": "65px",
      "z": "10"
    },
    "fde8debe-e1fe-4030-b8f0-dea77a7284da": {
      "datasourceId": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "fde8debe-e1fe-4030-b8f0-dea77a7284da",
      "name": "Vacuum Pump - TMP VT1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "columnNameFooter": "speed",
        "footerStyle": {
          "backgroundColor": "white",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "header": "TMP VT1",
        "headerStyle": {
          "color": "black"
        },
        "id": 1,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "rowId": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Error",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "470px",
      "y": "865px",
      "z": "10"
    },
    "608325e6-4dc2-4422-874b-d598075b5fe7": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "auto",
      "id": "608325e6-4dc2-4422-874b-d598075b5fe7",
      "name": "Gas Gauge G2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G2",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "2",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 2,
        "row_name": "id",
        "text": "52.7125",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "110%",
          "fontWeight": "bold",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "220px",
      "y": "110px",
      "z": "10"
    },
    "98d96606-40e3-4b02-bd08-965fdc2d99a8": {
      "datasourceId": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "98d96606-40e3-4b02-bd08-965fdc2d99a8",
      "name": "Vacuum Gauge TG1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge TG1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "1",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 1,
        "row_name": "id",
        "text": "47.1337",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "800px",
      "y": "765px",
      "z": 10
    },
    "0d4f0c50-fe05-49d2-a222-a01988dd5553": {
      "datasourceId": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "0d4f0c50-fe05-49d2-a222-a01988dd5553",
      "name": "MFC3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "percentage",
        "header": "MFC 3",
        "id": 3,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "rowId": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 58,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "800px",
      "y": "110px",
      "z": "10"
    },
    "fde8446c-279a-47bf-a25c-925f4f56e78d": {
      "datasourceId": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "fde8446c-279a-47bf-a25c-925f4f56e78d",
      "name": "Vacuum Gauge 1G3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge 1G3",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "4",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 4,
        "row_name": "id",
        "text": "21.4823",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "330px",
      "y": "765px",
      "z": 10
    },
    "eae36fa4-1c33-4be1-8cb0-3415fb411b28": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "eae36fa4-1c33-4be1-8cb0-3415fb411b28",
      "name": "Gas Valve Rotary 2 CV2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "CV2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "16",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 16,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "115px",
      "y": "465px",
      "z": "10"
    },
    "dd5d5d17-b251-4623-988b-fac0c0820d7e": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "dd5d5d17-b251-4623-988b-fac0c0820d7e",
      "name": "Gas Valve Tank5 V5",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V5",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 5,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 5,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "770px",
      "y": "315px",
      "z": "10"
    },
    "fdc38847-15c1-49a5-82f3-59f56208be01": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "fdc38847-15c1-49a5-82f3-59f56208be01",
      "name": "Valve - Main Pipe 1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 6,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 2,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "605px",
      "y": "271px",
      "z": "10"
    },
    "8a89c89c-9eb6-4fb0-89ba-f92e17dd3f15": {
      "datasourceId": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "8a89c89c-9eb6-4fb0-89ba-f92e17dd3f15",
      "name": "MFC1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "percentage",
        "header": "MFC 1",
        "id": 1,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "rowId": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 82,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "550px",
      "y": "110px",
      "z": "10"
    },
    "e3ba3cb4-ad4f-4952-b690-de9ebd54a09d": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "e3ba3cb4-ad4f-4952-b690-de9ebd54a09d",
      "name": "Vacuum - Valve 1V2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "disabled": true,
        "header": "1V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "4",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 4,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "380px",
      "y": "865px",
      "z": "10"
    },
    "041220e1-04dc-476f-b03d-c25d02a876ad": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "041220e1-04dc-476f-b03d-c25d02a876ad",
      "name": "Gas Valve TMP CV1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "CV1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "15",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 15,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "750px",
      "y": "465px",
      "z": "10"
    },
    "9b7b45bd-8005-4649-a120-dfe66650d3b4": {
      "datasourceId": "434bddf2-c83a-4cbc-bbb3-91820df56e23",
      "h": "100px",
      "id": "9b7b45bd-8005-4649-a120-dfe66650d3b4",
      "name": "Vacuum Safety Mode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "mode",
        "header": "Vacuum Safety Mode",
        "headerStyle": {
          "color": "black"
        },
        "onClick": "6a9a9e13-0d20-46ed-8657-bac29763a1ba",
        "preRenderFilter": "2dd60f79-daad-4473-aa73-4c8950f45d66",
        "rowId": "1",
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "SAFE",
        "textStyle": {
          "backgroundColor": "lightgreen",
          "fontSize": "120%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "140px",
      "x": "900px",
      "y": "660px",
      "z": 10
    },
    "6708ab0b-d82c-4db6-97c9-97299875178a": {
      "datasourceId": "0b2d691c-c9a9-4e6f-917d-3f22c8aa48b7",
      "h": "",
      "id": "6708ab0b-d82c-4db6-97c9-97299875178a",
      "name": "Dialog Gas Safety Mode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "170px"
        },
        "bsSize": "small",
        "header": "Gas Controller Mode",
        "onOK": "7753b6be-fe09-40ba-be7f-c5de12bca6db",
        "textOK": "Change Gas Safety Mode"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "0",
      "y": "65px",
      "z": "10"
    },
    "d4155c3e-3d49-436d-a249-b4ab7d1bcfa7": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "d4155c3e-3d49-436d-a249-b4ab7d1bcfa7",
      "name": "Vacuum - Valve 2V2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "disabled": true,
        "header": "2V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "5",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 5,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "380px",
      "y": "665px",
      "z": "10"
    },
    "55a28e26-6413-4477-bcb7-1fd06822c70a": {
      "datasourceId": "",
      "h": "",
      "id": "55a28e26-6413-4477-bcb7-1fd06822c70a",
      "name": "Dialog Vacuum Mode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "small",
        "header": "Vacuum Controller Mode"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "0",
      "y": "65px",
      "z": "10"
    },
    "ce63ae4c-ad75-4899-8048-2f0b8f58f4bd": {
      "datasourceId": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "ce63ae4c-ad75-4899-8048-2f0b8f58f4bd",
      "name": "Vacuum Gauge 2G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge 2G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "3",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 3,
        "row_name": "id",
        "text": "56.4031",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "665px",
      "z": 10
    },
    "231e1f97-00e3-4a42-8958-dcac8ad20dd7": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "231e1f97-00e3-4a42-8958-dcac8ad20dd7",
      "name": "Gas Gauge G5",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G5",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "5",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 5,
        "row_name": "id",
        "text": "74.8312",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "1000px",
      "y": "265px",
      "z": 10
    },
    "308a78bb-dbc2-489f-a2a0-b37130637941": {
      "datasourceId": "",
      "h": "auto",
      "id": "308a78bb-dbc2-489f-a2a0-b37130637941",
      "name": "Shutter - Open",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsStyle": "success",
        "onClick": "42109c56-10ef-4c27-8f23-22b281fe6f15",
        "shutters": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
        "text": "Open",
        "type": "shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "1300px",
      "y": "70px",
      "z": "10"
    },
    "0be555f9-7716-44dc-9870-8a212cf6429c": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "0be555f9-7716-44dc-9870-8a212cf6429c",
      "name": "Gas Gauge G4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G4",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "4",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 4,
        "row_name": "id",
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "265px",
      "z": 10
    },
    "9b4b42f8-ed1d-431a-a904-0f9e19d719c9": {
      "datasourceId": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "400px",
      "id": "9b4b42f8-ed1d-431a-a904-0f9e19d719c9",
      "name": "Dialog Open Shutter",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "550px"
        },
        "onOK": "28160644-89f1-4b15-9576-1853a6dc0deb",
        "textOK": "Open Shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "200px",
      "x": "",
      "y": "",
      "z": "10"
    },
    "85940608-ef34-4e35-8727-afe14a8bb38a": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "85940608-ef34-4e35-8727-afe14a8bb38a",
      "name": "Gas Gauge G7",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G7",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "7",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 7,
        "row_name": "id",
        "text": "42.7351",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "110%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "550px",
      "z": 10
    },
    "046e4c6a-66c0-4190-8fca-bd45e8793dc0": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "046e4c6a-66c0-4190-8fca-bd45e8793dc0",
      "name": "Vacuum Valve 2V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true,
        "5a5356cc-eda0-4563-a835-2e59767568b4": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "disabled": true,
        "header": "2V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "7",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 7,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "600px",
      "y": "765px",
      "z": "10"
    },
    "7d74e671-cccf-4428-95bb-86146f9016a3": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "7d74e671-cccf-4428-95bb-86146f9016a3",
      "name": "Gas Valve Tank4 V9",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "header": "V9",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 9,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 9,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "670px",
      "y": "315px",
      "z": "10"
    },
    "3d526af7-f712-4cbd-abd7-ab9838e4b481": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "3d526af7-f712-4cbd-abd7-ab9838e4b481",
      "name": "Gas Valve MFC3 MFC4 V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 3,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 3,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "850px",
      "y": "205px",
      "z": "10"
    },
    "5fafc359-c7dc-4509-a40e-fbf274fc0ea9": {
      "datasourceId": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "auto",
      "id": "5fafc359-c7dc-4509-a40e-fbf274fc0ea9",
      "name": "Table - Shutter",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "headers": [
          {
            "field": "id",
            "text": "ID",
            "width": "10%"
          },
          {
            "field": "title",
            "text": "Shutter",
            "width": "70%"
          },
          {
            "field": "status",
            "text": "Status",
            "width": "20%"
          }
        ],
        "preRenderFilter": "24e65f4a-3aeb-4908-bd97-ac08c0b2cee9",
        "style": {
          "backgroundColor": "white",
          "color": "black"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Table",
      "w": "300px",
      "x": "1300px",
      "y": "110px",
      "z": "10"
    },
    "44e6c076-53b6-483a-9fee-d7d33c1b1b35": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "44e6c076-53b6-483a-9fee-d7d33c1b1b35",
      "name": "Vacuum Vave 1V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "1V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "2",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 2,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "695px",
      "y": "865px",
      "z": "10"
    },
    "2d04631b-a7f6-46d9-9bee-25039ed5f3bf": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "2d04631b-a7f6-46d9-9bee-25039ed5f3bf",
      "name": "Gas Valve Tank2 V6",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V6",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 6,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 6,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "440px",
      "y": "315px",
      "z": "10"
    },
    "70dbe149-0141-47e3-8259-9e9a6e87e465": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "70dbe149-0141-47e3-8259-9e9a6e87e465",
      "name": "Gas Gauge G8",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G8",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "8",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 8,
        "row_name": "id",
        "text": "73.8494",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "110%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "110px",
      "z": 10
    },
    "30d74ff0-182b-40dd-b256-5eeb042c7244": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "auto",
      "id": "30d74ff0-182b-40dd-b256-5eeb042c7244",
      "name": "Gas Gauge G6",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G6",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "6",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 6,
        "row_name": "id",
        "text": "22.0025",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "110%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "450px",
      "y": "400px",
      "z": "10"
    },
    "f0ac75ca-9a37-48d0-a41c-a880ad6b9bfe": {
      "h": "auto",
      "id": "f0ac75ca-9a37-48d0-a41c-a880ad6b9bfe",
      "name": "NavBar",
      "pages": {
        "all": true
      },
      "parameter": {
        "fixedTop": true,
        "fluid": true,
        "header": "COMPASS Control",
        "inverse": true,
        "navigation": {
          "2": {
            "name": "Vacuum Control",
            "page": "4d1d9647-0e0d-42f6-b324-0267f916a9ca"
          },
          "3": {
            "name": "Glow Discharge",
            "page": "66378241-acca-407b-b4d0-adbba0fe9671"
          }
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "NavBar",
      "w": "100%",
      "x": "0px",
      "y": "0px",
      "z": "10"
    },
    "e04f2f3a-2726-4adc-9e8b-b4af808854d7": {
      "datasourceId": "0e97751e-530e-4ed2-989d-1be2fd7db114",
      "h": "",
      "id": "e04f2f3a-2726-4adc-9e8b-b4af808854d7",
      "name": "Dialog Pump On / Off",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "100px"
        },
        "bsSize": "small",
        "header": "TMP VT1",
        "onOK": "09591ff6-a13f-4d2e-b5c9-0b7dfc9f4def"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "0",
      "y": "65px",
      "z": "10"
    },
    "f407cf94-1372-4dca-95d7-de146974d199": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "f407cf94-1372-4dca-95d7-de146974d199",
      "name": "Gas Valve MFC1 MFC2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V4",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 4,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 4,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "545px",
      "y": "205px",
      "z": "10"
    },
    "246bf44a-7462-429e-a135-03ae8653164a": {
      "datasourceId": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "246bf44a-7462-429e-a135-03ae8653164a",
      "name": "Vacuum - Valve 1V4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "disabled": true,
        "header": "1V4",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "8",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 8,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "140px",
      "y": "765px",
      "z": "10"
    },
    "e1c9daf8-ebf0-4eaa-b5d1-ea31d28ec9e8": {
      "datasourceId": "",
      "h": "auto",
      "id": "e1c9daf8-ebf0-4eaa-b5d1-ea31d28ec9e8",
      "name": "Shutter - Close",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsStyle": "danger",
        "onClick": "da59abf4-7f05-453b-b4e5-09b2ec7ffcb5",
        "shutters": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
        "text": "Close",
        "type": "shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "1370px",
      "y": "70px",
      "z": "10"
    },
    "9209bed9-15b7-464a-a443-e4abc65589d9": {
      "datasourceId": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "auto",
      "id": "9209bed9-15b7-464a-a443-e4abc65589d9",
      "name": "Gas Gauge G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "pressure",
        "header": "Gauge G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "1",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 1,
        "text": "25.9891",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "110%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "120px",
      "y": "110px",
      "z": "8"
    },
    "86589015-41b8-4749-acd6-605198f0120a": {
      "datasourceId": "0b2d691c-c9a9-4e6f-917d-3f22c8aa48b7",
      "h": "100px",
      "id": "86589015-41b8-4749-acd6-605198f0120a",
      "name": "Gas Safety Mode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "mode",
        "header": "Gas Safety Mode",
        "headerStyle": {
          "color": "black"
        },
        "onClick": "db4efb7c-54a0-496b-8539-61833c5eddc1",
        "preRenderFilter": "2dd60f79-daad-4473-aa73-4c8950f45d66",
        "rowId": "1",
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "SAFE",
        "textStyle": {
          "backgroundColor": "lightgreen",
          "fontSize": "120%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "140px",
      "x": "900px",
      "y": "500px",
      "z": 10
    },
    "37fb73f3-8038-48b2-b5b8-6e6dbec48754": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "37fb73f3-8038-48b2-b5b8-6e6dbec48754",
      "name": "Gas Valve V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "columnName": "status",
        "header": "V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "13",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 1,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "115px",
      "y": "345px",
      "z": "12"
    },
    "be8ee877-c2bf-4a60-a56b-ed9f7cde2bd1": {
      "datasourceId": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "be8ee877-c2bf-4a60-a56b-ed9f7cde2bd1",
      "name": "Gas Valve G3 V10",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "columnName": "status",
        "header": "V10",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 10,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "rowId": 10,
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "320px",
      "y": "190px",
      "z": "10"
    },
    "cdac1314-614b-44a2-b58f-87bcd79523d4": {
      "datasourceId": "05d591aa-63a3-4180-ae59-ffd1026aec5a",
      "h": "200px",
      "id": "cdac1314-614b-44a2-b58f-87bcd79523d4",
      "name": "Last Shot",
      "pages": {},
      "parameter": {
        "columnName": "shot_no",
        "columnNameFooter": "cr_time",
        "footerStyle": {
          "fontSize": "80%",
          "textAlign": "right"
        },
        "header": "Last shot",
        "headerStyle": {
          "fontSize": "80%"
        },
        "preRenderFilter": "bf2a2cf8-dd85-40c8-997b-7f8eded25a02",
        "style": {
          "borderColor": "white",
          "borderWidth": "2px"
        },
        "text": "14742",
        "textStyle": {
          "fontSize": "250%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "200px",
      "x": "20px",
      "y": "65px",
      "z": 10
    },
    "5a1f0dfb-fbac-4d9d-b3a0-3ace3cda0d69": {
      "datasourceId": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "",
      "id": "5a1f0dfb-fbac-4d9d-b3a0-3ace3cda0d69",
      "name": "Shutter Open Dialog - Checkbox",
      "pages": {
        "9b4b42f8-ed1d-431a-a904-0f9e19d719c9": true
      },
      "parameter": {
        "header": "Select Shutters to Open:",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "style": {
          "color": "black"
        },
        "valueColumnName": "open_request"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Checkbox",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "46b57b73-3349-49b2-98aa-5acd06fbdfd4": {
      "datasourceId": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "400px",
      "id": "46b57b73-3349-49b2-98aa-5acd06fbdfd4",
      "name": "Dialog Close Shutter ",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "550px"
        },
        "onOK": "14825a83-3d96-46da-babc-473655cff217",
        "textOK": "Close Shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "200px",
      "x": "",
      "y": "",
      "z": "10"
    },
    "2fa180bc-7de5-45b6-a4eb-7dd166ef81ea": {
      "datasourceId": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "",
      "id": "2fa180bc-7de5-45b6-a4eb-7dd166ef81ea",
      "name": "Shutter Close Dialog - Checkbox",
      "pages": {
        "46b57b73-3349-49b2-98aa-5acd06fbdfd4": true
      },
      "parameter": {
        "header": "Select Shutters to Close:",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "style": {
          "color": "black"
        },
        "valueColumnName": "close_request"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Checkbox",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "536cbb33-dca7-4e3e-bde0-d69828041bb3": {
      "datasourceId": "0e97751e-530e-4ed2-989d-1be2fd7db114",
      "datasource_id": "",
      "h": "",
      "id": "536cbb33-dca7-4e3e-bde0-d69828041bb3",
      "name": "Pump on / off Dialog - Radio",
      "pages": {
        "e04f2f3a-2726-4adc-9e8b-b4af808854d7": true
      },
      "parameter": {
        "header": "Switch On / Off:",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "option": [
          "On",
          "Off"
        ],
        "style": {
          "color": "black"
        },
        "valueColumnName": "switch"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Radio",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "e22507fe-c7c0-46cf-a45d-001ff6d0321b": {
      "datasourceId": "06cc3d54-1ef3-4f17-a65d-498349a81e50",
      "h": "350px",
      "id": "e22507fe-c7c0-46cf-a45d-001ff6d0321b",
      "name": "Temperature Chart",
      "parameter": {
        "header": "Vacuum Temperature",
        "headerStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "height": 300,
        "lines": [
          {
            "dataKey": "min",
            "stroke": "blue"
          },
          {
            "dataKey": "max",
            "stroke": "red"
          },
          {
            "dataKey": "avg",
            "stroke": "green"
          }
        ],
        "margin": {
          "bottom": 0,
          "left": 0,
          "right": 30,
          "top": 10
        },
        "width": 500
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "ChartLine",
      "w": "550px",
      "x": "250px",
      "y": "70px",
      "z": "10"
    },
    "b7ca9125-dc4a-43b1-83c5-0a0440579353": {
      "datasourceId": "434bddf2-c83a-4cbc-bbb3-91820df56e23",
      "h": "",
      "id": "b7ca9125-dc4a-43b1-83c5-0a0440579353",
      "name": "Dialog Vacuum Safety Mode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bodyStyle": {
          "height": "200px"
        },
        "bsSize": "small",
        "header": "Vacuum Safety Mode Setup",
        "onOK": "0f15921a-2743-4105-8738-3cbb9ed8751d",
        "textOK": "Change Safety Mode"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "",
      "y": "",
      "z": "10"
    },
    "219bf757-35cc-403d-809c-f8d66bd84b4e": {
      "datasourceId": "434bddf2-c83a-4cbc-bbb3-91820df56e23",
      "datasource_id": "",
      "h": "",
      "id": "219bf757-35cc-403d-809c-f8d66bd84b4e",
      "name": "Vacuum Safety Option",
      "pages": {
        "b7ca9125-dc4a-43b1-83c5-0a0440579353": true
      },
      "parameter": {
        "header": "Change Vacuum Safety Mode:",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "option": [
          "Idle",
          "High Vacuum",
          "Primary Vacuum",
          "UNSAFE Mode",
          "Stop",
          "Glow Discharge"
        ],
        "style": {
          "color": "black"
        },
        "valueColumnName": "goto"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Radio",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "55ef88f0-b927-4e84-8a91-a623d9568c1e": {
      "datasourceId": "35c97759-90d2-4748-adbb-8a6c37e54336",
      "datasource_id": "",
      "h": "",
      "id": "55ef88f0-b927-4e84-8a91-a623d9568c1e",
      "name": "Dialog MFC Input Percentage",
      "pages": {
        "f087a1cd-9769-455b-b10e-d6bafe877138": true
      },
      "parameter": {
        "header": "Set flow percentage",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "helpText": "percentage should be a number.",
        "style": {
          "color": "black"
        },
        "valueColumnName": "percentage"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "TextInput",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "7e74e074-dc27-4a39-9e55-4a033d9c6165": {
      "datasourceId": "0b2d691c-c9a9-4e6f-917d-3f22c8aa48b7",
      "datasource_id": "",
      "h": "",
      "id": "7e74e074-dc27-4a39-9e55-4a033d9c6165",
      "name": "Gas Safety Option",
      "pages": {
        "6708ab0b-d82c-4db6-97c9-97299875178a": true
      },
      "parameter": {
        "header": "Change Gas Safety Mode:",
        "headerStyle": {
          "color": "black",
          "fontSize": "130%",
          "textDecoration": "underline"
        },
        "option": [
          "Start",
          "Stop",
          "Shoot",
          "Strnad",
          "Idle"
        ],
        "style": {
          "color": "black"
        },
        "valueColumnName": "request"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Radio",
      "w": "",
      "x": "",
      "y": "",
      "z": 10
    },
    "5ac80c7a-15eb-48db-bd15-c89b6ca8a028": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "100px",
      "id": "5ac80c7a-15eb-48db-bd15-c89b6ca8a028",
      "name": "Measurement",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "text",
        "footerStyle": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "70%",
          "textAlign": "center"
        },
        "header": "Current / Voltage",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%",
          "textAlign": "center"
        },
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 1,
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "150px",
      "x": "1120px",
      "y": "110px",
      "z": 10
    },
    "658d9cda-969e-41ec-931e-4d8850c09411": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "100px",
      "id": "658d9cda-969e-41ec-931e-4d8850c09411",
      "name": "Electrode",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "electrode",
        "header": "Electrode",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "onClick": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
        "preRenderFilter": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
        "rowId": 1,
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "type": "set_electrode"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "150px",
      "x": "1120px",
      "y": "290px",
      "z": 10
    },
    "3a607e35-d0db-4d0d-bae0-d4bc47253449": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "auto",
      "id": "3a607e35-d0db-4d0d-bae0-d4bc47253449",
      "name": "UV Lamp",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "uv_lamp",
        "header": " UV Lamp ",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "onClick": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
        "preRenderFilter": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
        "rowId": 1,
        "text": "81.2385",
        "textStyle": {
          "fontSize": "100%",
          "textAlign": "center"
        },
        "type": "set_uv_lamp"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "150px",
      "x": "1120px",
      "y": "200px",
      "z": 10
    },
    "7f333b8c-4170-475b-b351-fecb2abc1c9f": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "100px",
      "id": "7f333b8c-4170-475b-b351-fecb2abc1c9f",
      "name": "Electrode Position",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "electrode_pos",
        "header": "Electrode Position",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "onClick": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
        "preRenderFilter": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
        "rowId": 1,
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "type": "set_electrode_position"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "150px",
      "x": "1120px",
      "y": "380px",
      "z": 10
    },
    "978e49df-8255-46ea-86ac-7a8a2c9105d6": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "100px",
      "id": "978e49df-8255-46ea-86ac-7a8a2c9105d6",
      "name": "Electrode Cooling",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "electrode_cooling",
        "header": "Electrode Cooling",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "onClick": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
        "preRenderFilter": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
        "rowId": 1,
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "type": "set_electrode_cooling"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "150px",
      "x": "1120px",
      "y": "470px",
      "z": 10
    },
    "ce5ee096-6158-4427-9d03-88c1f684f7a9": {
      "datasourceId": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "h": "100px",
      "id": "ce5ee096-6158-4427-9d03-88c1f684f7a9",
      "name": "Fastcam Cooling",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "fastcam_cooling",
        "header": "Fastcam Cooling",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "onClick": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
        "preRenderFilter": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
        "rowId": 1,
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        },
        "type": "set_fastcam_cooling"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "150px",
      "x": "1120px",
      "y": "560px",
      "z": 10
    },
    "a2804579-26cf-4dab-aed7-27b9c3bb8092": {
      "datasourceId": "b8be2416-b238-41af-a0c2-f3c1fd9f0b44",
      "h": "100px",
      "id": "a2804579-26cf-4dab-aed7-27b9c3bb8092",
      "name": "Gas Pneumatic",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "Gas Pneumatic",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%",
          "textAlign": "center"
        },
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 1,
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "150px",
      "x": "1120px",
      "y": "650px",
      "z": 10
    },
    "f2c2363c-b63e-4b4d-875d-2e4a3f4f6f3f": {
      "datasourceId": "c2a753fc-e5f3-43e6-a1f0-63015da69a31",
      "h": "100px",
      "id": "f2c2363c-b63e-4b4d-875d-2e4a3f4f6f3f",
      "name": "Vacuum Pneumatic",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "columnName": "status",
        "header": "Vacuum Pneumatic",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%",
          "textAlign": "center"
        },
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "rowId": 1,
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "150px",
      "x": "1120px",
      "y": "750px",
      "z": 10
    },
    "660df12d-d938-46ea-a984-45fed58c0027": {
      "datasourceId": "9e138a65-eb33-48e1-bcd9-033bbe11fe56",
      "datasource_id": "",
      "h": "",
      "id": "660df12d-d938-46ea-a984-45fed58c0027",
      "name": "Vaccum Glow Discharge TMP Speed",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "header": "Glow discharge TMP speed limit %",
        "headerStyle": {
          "color": "white",
          "fontSize": "100%"
        },
        "valueColumnName": "glow_discharge_tmp_speed"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "TextInput",
      "w": "",
      "x": "40px",
      "y": "850px",
      "z": 10
    },
    "a2587876-a314-43ae-bf56-a3d6469a87be": {
      "datasourceId": "",
      "h": "auto",
      "id": "a2587876-a314-43ae-bf56-a3d6469a87be",
      "name": "update",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "id": "8",
        "onClick": "48ca361f-3672-47ae-a9a7-ba2297867556",
        "text": "set"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "215px",
      "y": "920px",
      "z": "10"
    },
    "dfeab99e-a69b-454f-b88e-e248d442235a": {
      "datasourceId": "c9571a89-6efa-4de9-8ac7-e7237b8f12ab",
      "h": "auto",
      "id": "dfeab99e-a69b-454f-b88e-e248d442235a",
      "name": "Initialize",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "header": "Initialize",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "200%",
          "textAlign": "center"
        },
        "id": 1,
        "preRenderFilter": "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "250px",
      "x": "50px",
      "y": "150px",
      "z": 10
    },
    "fbb02d5a-f207-4483-9760-91879c4f48a3": {
      "datasourceId": "c9571a89-6efa-4de9-8ac7-e7237b8f12ab",
      "h": "auto",
      "id": "fbb02d5a-f207-4483-9760-91879c4f48a3",
      "name": "Configuration",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "header": "Configuration",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "200%",
          "textAlign": "center"
        },
        "id": 2,
        "preRenderFilter": "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "250px",
      "x": "400px",
      "y": "150px",
      "z": 10
    },
    "0f1efd9d-89dc-4b20-acbe-63b6929c44ab": {
      "datasourceId": "c9571a89-6efa-4de9-8ac7-e7237b8f12ab",
      "h": "auto",
      "id": "0f1efd9d-89dc-4b20-acbe-63b6929c44ab",
      "name": "Glow Discharge",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "header": "Glow Discharge",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "200%",
          "textAlign": "center"
        },
        "id": 3,
        "preRenderFilter": "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "250px",
      "x": "750px",
      "y": "150px",
      "z": 10
    },
    "bb7de179-c2fe-4f19-87a8-a946ec9d38a1": {
      "datasourceId": "c9571a89-6efa-4de9-8ac7-e7237b8f12ab",
      "h": "auto",
      "id": "bb7de179-c2fe-4f19-87a8-a946ec9d38a1",
      "name": "Exhaust",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "header": "Exhaust",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "200%",
          "textAlign": "center"
        },
        "id": 4,
        "preRenderFilter": "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "250px",
      "x": "1100px",
      "y": "150px",
      "z": 10
    },
    "4f6af251-1d15-4764-8c86-3cf6b6f307e9": {
      "datasourceId": "",
      "h": "auto",
      "id": "4f6af251-1d15-4764-8c86-3cf6b6f307e9",
      "name": "Start Glow Discharge",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "bsStyle": "success",
        "onClick": "9e5f15de-95c9-4037-8931-e171836aea6d",
        "text": "Start"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "50px",
      "y": "100px",
      "z": "10"
    },
    "ca9fec72-a81a-49cd-9bd6-422f8b9e7469": {
      "datasourceId": "",
      "h": "auto",
      "id": "ca9fec72-a81a-49cd-9bd6-422f8b9e7469",
      "name": "Stop",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "bsStyle": "danger",
        "onClick": "fa5f918b-f6ce-4d8f-8ee2-1c64f585815c",
        "text": "Stop"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "120px",
      "y": "100px",
      "z": "10"
    },
    "66972624-2263-4fa7-85c6-38f296bb7016": {
      "datasourceId": "cf3478cc-443e-4c10-8433-30ea70b0d2b8",
      "h": "600px",
      "id": "66972624-2263-4fa7-85c6-38f296bb7016",
      "name": "Glow Discharge Log",
      "pages": {
        "66378241-acca-407b-b4d0-adbba0fe9671": true
      },
      "parameter": {
        "headers": [
          {
            "field": "created",
            "text": "created",
            "width": "15%"
          },
          {
            "field": "message",
            "text": "Log",
            "width": "90%"
          }
        ],
        "preRenderFilter": "d41ea1ac-aa99-4101-8e6e-2b5dd6cd6136",
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "overflowY": "auto"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Table",
      "w": "1300px",
      "x": "50px",
      "y": "230px",
      "z": "10"
    }
  },
  "filepath": "/home/lee/Project/control-center/doc/project_template.json",
  "sources": {
    "eca742ec-866d-4ed5-b9d8-01e59ef38970": {
      "data": [
        {
          "id": 1,
          "open_request": false,
          "status": "Middle",
          "title": "Spectrometer"
        },
        {
          "id": 2,
          "open_request": false,
          "status": "Middle",
          "title": "Fast Camera 1"
        },
        {
          "close_request": true,
          "id": 3,
          "open_request": true,
          "status": "Open",
          "title": "Tomography 1"
        },
        {
          "close_request": false,
          "id": 4,
          "open_request": false,
          "status": "Open",
          "title": "Interferometer 1"
        },
        {
          "close_request": true,
          "id": 5,
          "open_request": false,
          "status": "Middle",
          "title": "Interferometer 2"
        },
        {
          "close_request": true,
          "id": 6,
          "open_request": true,
          "status": "Open",
          "title": "Tomography 2"
        },
        {
          "close_request": true,
          "id": 7,
          "open_request": true,
          "status": "Open",
          "title": "Tomography 3"
        },
        {
          "id": 8,
          "open_request": true,
          "status": "Middle",
          "title": "Tomography 4"
        },
        {
          "id": 9,
          "open_request": false,
          "status": "Closed",
          "title": "Plasma Rotation 1"
        },
        {
          "id": 10,
          "open_request": false,
          "status": "Middle",
          "title": "Plasma Rotation 2"
        },
        {
          "id": 11,
          "open_request": false,
          "status": "Closed",
          "title": "Reflectometry"
        },
        {
          "close_request": true,
          "id": 12,
          "status": "Closed",
          "title": "TS Edge"
        },
        {
          "close_request": true,
          "id": 13,
          "status": "Open",
          "title": "TS Core"
        },
        {
          "id": 14,
          "status": "Closed",
          "title": "TS Top"
        },
        {
          "id": 15,
          "status": "Closed",
          "title": "TS Lens"
        },
        {
          "id": 16,
          "status": "Closed",
          "title": "Fast Camera 2"
        },
        {
          "id": 17,
          "status": "Closed",
          "title": "Avalanche Photo Diode"
        },
        {
          "id": 18,
          "status": "Closed",
          "title": "Radiometer 1"
        },
        {
          "id": 19,
          "status": "Closed",
          "title": "Radiometer 2"
        },
        {
          "id": 20,
          "status": "Error",
          "title": "NP Analyzer"
        }
      ],
      "id": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "name": "Shutter",
      "run_id": "b30eec2f-966e-4b80-99cb-64ae4baebc21",
      "script": "const request = require('request')\nlet run_id = context.source.run_id\nlet url = \"http://thermoc:8081/api/shutter/status\"\nlet timing = 1000\n\n// run http://localhost:8081/api/shutter/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }  \n\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      shutters = source.data\n      shutters.forEach( (target) => {\n        response.shutter.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n\n      // run next interval\n      setTimeout( tick , timing )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7": {
      "data": [
        {
          "id": 1,
          "status": "closed"
        },
        {
          "id": 2,
          "status": "closed"
        },
        {
          "id": 3,
          "status": "open"
        },
        {
          "id": 4,
          "status": "open"
        },
        {
          "id": 5,
          "status": "closed"
        },
        {
          "id": 6,
          "status": "closed"
        },
        {
          "id": 7,
          "status": "closed"
        },
        {
          "id": 8,
          "status": "closed"
        },
        {
          "id": 9,
          "status": "closed"
        },
        {
          "id": 10,
          "status": "closed"
        },
        {
          "id": 11,
          "status": "closed"
        },
        {
          "id": 12,
          "status": "closed"
        },
        {
          "id": 13,
          "status": "closed"
        },
        {
          "id": 14,
          "status": "closed"
        },
        {
          "id": 15,
          "status": "open"
        },
        {
          "id": 16,
          "status": "closed"
        }
      ],
      "id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "name": "Gas Valves",
      "run_id": "7a7a4797-2032-48b7-a287-7b2664fe9af5",
      "script": "let url = \"http://thermoc:8081/api/gas_valve/status\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n\n    // find source\n    let sources = context.projectManager.sources()\n    let source = sources[context.source.id]\n  \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      valves = source.data\n      valves.forEach( (target) => {\n        response.gas_valve.forEach( (s) => {\n          if( target.id == s.id ) {\n          \n            // transition, opening closing\n            if( (target.status == \"opening\" || \n                target.status == \"opening.\" || \n                target.status == \"opening..\") &&\n                s.status == \"closed\" ) {\n                s.status = target.status+\".\"\n            }\n            \n            if( (target.status == \"closing\" || \n                target.status == \"closing.\" || \n                target.status == \"closing..\") &&\n                s.status == \"open\" ) {\n                s.status = target.status+\".\"\n            }\n                \n            // update status of the shutter\n            target.status = s.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)    \n    }\n    \n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "838ec61c-0450-422c-ba0f-8aadd542ca02": {
      "data": [
        {
          "status": 43,
          "percentage": 2,
          "id": 1
        },
        {
          "status": 43,
          "percentage": 2,
          "id": 2
        },
        {
          "status": 43,
          "percentage": 0,
          "id": 3
        },
        {
          "status": 43,
          "percentage": 12,
          "id": 4
        }
      ],
      "id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "name": "MFC",
      "run_id": "d5daad69-000c-4b41-b138-c7de309deedb",
      "script": "let url = \"http://thermoc:8081/api/mfc/status\"\nlet timing = 2000\n\nconst request = require('request')\n\nfunction tick() {\n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      context.source.data = response.mfc\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a": {
      "data": [
        {
          "pressure": "83900.0",
          "id": 1
        },
        {
          "pressure": "0",
          "id": 2
        },
        {
          "pressure": "N/A",
          "id": 3
        },
        {
          "pressure": "44500.0",
          "id": 4
        },
        {
          "pressure": "45300.0",
          "id": 5
        },
        {
          "pressure": "100000.0",
          "id": 6
        },
        {
          "pressure": "1900.0",
          "id": 7
        },
        {
          "pressure": "N/A",
          "id": 8
        }
      ],
      "id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "name": "Gas Gauge",
      "run_id": "30d329d0-1773-49a7-aa91-8b3c35d77a0d",
      "script": "let url = \"http://thermoc:8081/api/gas_gauge/status\"\nlet timing = 2000\n\nconst request = require('request')\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/gas_gauge/status to get the status\nfunction tick() {  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n\n    // find source\n    let sources = context.projectManager.sources()\n    let source = sources[context.source.id]\n  \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      source.data = response.gas_gauge\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "a57331b6-7756-4645-a489-0ddec11cb9bb": {
      "data": [
        {
          "id": 1,
          "status": "Started"
        },
        {
          "id": 2,
          "status": "Error"
        },
        {
          "id": 3,
          "status": "Stopping"
        }
      ],
      "id": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "name": "Gas Pump",
      "run_id": "4c7cd8c0-a86b-4a5b-9545-b35bab37575a",
      "script": "let url = \"http://localhost:8081/api/gas_pump/status\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n\n    // find source\n    let sources = context.projectManager.sources()\n    let source = sources[context.source.id]\n      \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      pumps = source.data\n      pumps.forEach( (target) => {\n        response.gas_pump.forEach( (s) => {\n          if( target.id == s.id ) {\n            // update status of the shutter\n            target.status = s.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "6b03887c-c62c-435e-87e5-6c8ac06078b4": {
      "data": [
        {
          "id": 1,
          "speed": null,
          "status": "Stopped"
        },
        {
          "id": 2,
          "speed": null,
          "status": "Stopped"
        },
        {
          "id": 3,
          "status": "Stopped",
          "speed": null
        }
      ],
      "id": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "name": "Vacuum Pump",
      "run_id": "18ff4e07-c981-4a5f-a1a2-db94a391066b",
      "script": "let url = \"http://thermoc:8081/api/vacuum_pump/status\"\nlet timing = 1000\n\nconst request = require('request')\n\nfunction tick() {\n\n  request(url, function(err, resp, body) {    \n    setTimeout( tick , timing ) // run next interval\n\n    // find source\n    let sources = context.projectManager.sources()\n    let source = sources[context.source.id]\n  \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      pumps = source.data\n      pumps.forEach( (target) => {\n        response.vacuum_pump.forEach( (s) => {\n          if( target.id == s.id ) {\n            // update status of the shutter\n            target.status = s.status\n            if( s.speed1 && s.speed2 )\n              target.speed = String(s.speed1) + '/' + String(s.speed2)\n            else \n              target.speed = null\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)      \n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "008b7645-10c6-46fe-82d0-745c43a4f74a": {
      "data": [
        {
          "pressure": "0.41",
          "id": 1
        },
        {
          "pressure": "0.39",
          "id": 2
        },
        {
          "pressure": "0.39",
          "id": 3
        },
        {
          "pressure": "0.4",
          "id": 4
        }
      ],
      "id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "name": "Vacuum Gauge",
      "run_id": "762ad37e-678a-452c-8eb5-a346e1f4ada1",
      "script": "let url = \"http://thermoc:8081/api/vacuum_gauge/status\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      source.data = response.vacuum_gauge\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2": {
      "data": [
        {
          "id": 1,
          "status": "error"
        },
        {
          "id": 2,
          "status": "open"
        },
        {
          "id": 3,
          "status": "open"
        },
        {
          "id": 4,
          "status": "open"
        },
        {
          "id": 5,
          "status": "open"
        },
        {
          "id": 6,
          "status": "open"
        },
        {
          "id": 7,
          "status": "open"
        },
        {
          "id": 8,
          "status": "closed"
        }
      ],
      "id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "name": "Vacuum Valve",
      "run_id": "abe09df1-4fad-46e3-8594-5a890384ab3c",
      "script": "let url = \"http://thermoc:8081/api/vacuum_valve/status\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  setTimeout( tick , timing ) // run next interval\n  request(url, function(err, resp, body) {\n    // find source\n    let sources = context.projectManager.sources()\n    let source = sources[context.source.id]\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      let valves = source.data\n      valves.forEach( (target) => {\n        response.vacuum_valve.forEach( (s) => {\n        \n          if( target.id == s.id ) {\n          \n            // transition, opening closing\n            if( (target.status == \"opening\" || \n                target.status == \"opening.\" || \n                target.status == \"opening..\") &&\n                s.status == \"closed\" ) {\n                s.status = target.status+\".\"\n            }\n            \n            if( (target.status == \"closing\" || \n                target.status == \"closing.\" || \n                target.status == \"closing..\") &&\n                s.status == \"open\" ) {\n                s.status = target.status+\".\"\n            }\n            \n            // update status of the shutter\n            target.status = s.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "05d591aa-63a3-4180-ae59-ffd1026aec5a": {
      "data": [
        {
          "lid": 13387,
          "shot_no": 14884,
          "sname": "Ip=300kA, ne=4.6e19m-3, Kp(Br) = 150k",
          "cr_time": "2017-07-14T19:10:32.000Z",
          "resp_uid": 4,
          "vice_uid": 0,
          "taglist": "  AFTER_GLOW D-Shaped",
          "cid": 172,
          "wiki_fact": ""
        }
      ],
      "id": "05d591aa-63a3-4180-ae59-ffd1026aec5a",
      "name": "Last Shot",
      "run_id": "fe523128-4e2d-4883-9b27-8d66d160ad1e",
      "script": "const mysql = require('mysql');\nconst sql = `\n  SELECT \n  \t* \n  FROM logbook.logbook \n  ORDER BY shot_no DESC\n  LIMIT 1;\n`\n\n\nfunction tick() {\n\n// connection info\nvar con = mysql.createConnection({\n  host: \"www\",\n  user: \"readonly\",\n  password: \"readonly\"\n});\n  // fetch data\n  con.connect(function(err) {\n    if (err) throw err;\n    con.query(sql, function (err, result) {\n      if (err) throw err;\n      context.source.data = JSON.parse(JSON.stringify(result));\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n      // run next interval\n      setTimeout( tick , 10000 )\n    });\n  });  \n}\n\ntick()"
    },
    "0e97751e-530e-4ed2-989d-1be2fd7db114": {
      "data": [
        {
          "close_request": true,
          "id": 1,
          "switch": "On",
          "type": "vacuum_pump"
        }
      ],
      "id": "0e97751e-530e-4ed2-989d-1be2fd7db114",
      "name": "Pump On / Off",
      "run_id": "9fb1579e-e1b9-41ad-89ca-a5b59ad2f265",
      "script": ""
    },
    "06cc3d54-1ef3-4f17-a65d-498349a81e50": {
      "data": [
        {
          "min": 22,
          "max": 33.7,
          "avg": 26.2
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        },
        {
          "min": 22,
          "max": 33.8,
          "avg": 26.3
        }
      ],
      "id": "06cc3d54-1ef3-4f17-a65d-498349a81e50",
      "name": "Temperature",
      "run_id": "ba0cc4f8-d116-4bba-bb89-ae66f25846b8",
      "script": "const net = require('net')\n\nconst HOST = \"thermoc\"\nconst PORT = \"9009\"\nconst timing = 10000\nconst length = 100\n\nfunction tick() {\n  setTimeout( tick , timing ) // run next interval\n\n  let client = new net.Socket()\n  client.connect(PORT, HOST, function(){\n    client.write(\"HIT ME\\n\")\n  })\n\n  // Add a 'data' event handler for the client socket\n  // data is what the server sent to this socket\n  client.on('data', function(data) {      \n      client.destroy(); // Close the client socket completely      \n      t = String(data).trim().split(\" \")\n      \n      // find source\n      let sources = context.projectManager.sources()\n      let source = sources[context.source.id]     \n\n      // update shutter data\n      if( source.data.length > length ) source.data.shift()\n      if( source.data.length > length ) source.data.shift()\n      \n      source.data.push({\n        \"min\": parseFloat(t[1]), \n        \"max\": parseFloat(t[2]), \n        \"avg\": parseFloat(t[3])\n      }) \n      \n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n      \n  });\n  \n}\n\ntick()"
    },
    "434bddf2-c83a-4cbc-bbb3-91820df56e23": {
      "data": [
        {
          "goto": "UNSAFE Mode",
          "id": "1",
          "mode": "UNSAFE",
          "status": "ok"
        }
      ],
      "id": "434bddf2-c83a-4cbc-bbb3-91820df56e23",
      "name": "Vacuum Safety Mode",
      "run_id": "a47b1518-b672-4b0b-8a1f-c74f76806bd6",
      "script": "let url = \"http://thermoc:8081/api/vacuum_mode/get\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {  \n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // find source\n      let sources = context.projectManager.sources()\n      let source = sources[context.source.id]\n    \n      // update shutter data      \n      source.data[0]['mode'] = response.mode\n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "0b2d691c-c9a9-4e6f-917d-3f22c8aa48b7": {
      "data": [
        {
          "id": "1",
          "mode": "Stop",
          "request": "Start"
        }
      ],
      "id": "0b2d691c-c9a9-4e6f-917d-3f22c8aa48b7",
      "name": "Gas Safety Mode",
      "run_id": "5b9c4a96-317b-4a44-b3af-e18a5d1931dd",
      "script": "\n"
    },
    "35c97759-90d2-4748-adbb-8a6c37e54336": {
      "data": [
        {
          "id": 3,
          "percentage": "80"
        }
      ],
      "id": "35c97759-90d2-4748-adbb-8a6c37e54336",
      "name": "MFC Percentage",
      "run_id": "f13f6206-72a5-4a46-8cdd-f87282456813",
      "script": ""
    },
    "eed0e3a4-1961-4113-9be1-160036b0366d": {
      "data": [
        {
          "status": "ok",
          "electrode_pos": "Out",
          "electrode_cooling": "Stopped",
          "fastcam_cooling": "Stopped",
          "current": "0.0",
          "voltage": "0.0",
          "electrode": "Off",
          "uv_lamp": "Off",
          "id": 1,
          "text": "0.0 / 0.0"
        }
      ],
      "id": "eed0e3a4-1961-4113-9be1-160036b0366d",
      "name": "Measurement",
      "run_id": "e45671d5-8a56-4b74-bebc-e9c1db6ba653",
      "script": "let url = \"http://thermoc:8081/api/gas_info/get_gdc\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      response.id = 1\n      response.text = response.current + \" / \" + response.voltage\n      source.data = [response]\n      \n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "b8be2416-b238-41af-a0c2-f3c1fd9f0b44": {
      "data": [
        {
          "status": "OK",
          "id": 1
        }
      ],
      "id": "b8be2416-b238-41af-a0c2-f3c1fd9f0b44",
      "name": "Gas Pneumatic",
      "run_id": "efcdaa7c-bc49-4797-a17d-897635a8094b",
      "script": "let url = \"http://thermoc:8081/api/gas_info/get_pneumatic\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n\n      // update shutter data\n      response.id = 1\n      source.data = [response]\n      \n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "c2a753fc-e5f3-43e6-a1f0-63015da69a31": {
      "data": [
        {
          "status": "timeout",
          "id": 1
        }
      ],
      "id": "c2a753fc-e5f3-43e6-a1f0-63015da69a31",
      "name": "Vacuum Pneumatics",
      "run_id": "5d162133-6e11-4f66-b6c4-76930b9aa592",
      "script": "let url = \"http://thermoc:8081/api/vacuum_info/get_pneumatic\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n\n      // update shutter data\n      response.id = 1\n      source.data = [response]\n      \n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "9e138a65-eb33-48e1-bcd9-033bbe11fe56": {
      "data": [
        {
          "status": "ok",
          "glow_discharge_tmp_speed": 100,
          "high_vacuum_tmp_speed": 100,
          "id": 1
        }
      ],
      "id": "9e138a65-eb33-48e1-bcd9-033bbe11fe56",
      "name": "Vacuum TMP Speed Setup",
      "run_id": "1b8ec976-2a95-4d32-87c2-7b806e8c1e36",
      "script": "let url = \"http://thermoc:8081/api/vacuum_info/get_tmp_speed\"\nlet timing = 3000\n\nconst request = require('request')\n\nfunction tick() {\n  // find source\n  let sources = context.projectManager.sources()\n  let source = sources[context.source.id]\n  \n  request(url, function(err, resp, body) {\n    setTimeout( tick , timing ) // run next interval\n    \n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n\n      // update shutter data\n      response.id = 1\n      source.data = [response]\n      \n      // send out the update to all windows\n      context.projectManager.send('source.changed', source)\n\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "cf3478cc-443e-4c10-8433-30ea70b0d2b8": {
      "data": [
        {
          "created": 1502291780457,
          "message": "Log Cleared"
        }
      ],
      "id": "cf3478cc-443e-4c10-8433-30ea70b0d2b8",
      "name": "Glow Discharge Log",
      "run_id": "1a1ca005-93a6-499d-82e4-52b1063fe2eb",
      "script": "context.source.data = []\ncontext.source.data.push({\n  \"created\": Date.now(),\n  \"message\": \"Log Cleared\"\n})\ncontext.projectManager.send(\"source.changed\", context.source)"
    },
    "c9571a89-6efa-4de9-8ac7-e7237b8f12ab": {
      "data": [
        {
          "run": true,
          "state": 2
        }
      ],
      "id": "c9571a89-6efa-4de9-8ac7-e7237b8f12ab",
      "name": "Glow Discharge State",
      "run_id": "70f1f556-2b21-4e89-b2c3-f80e7f369877",
      "script": ""
    }
  },
  "pages": {
    "5a5356cc-eda0-4563-a835-2e59767568b4": {
      "id": "5a5356cc-eda0-4563-a835-2e59767568b4",
      "name": "Home"
    },
    "4d1d9647-0e0d-42f6-b324-0267f916a9ca": {
      "id": "4d1d9647-0e0d-42f6-b324-0267f916a9ca",
      "name": "Controller"
    },
    "66378241-acca-407b-b4d0-adbba0fe9671": {
      "id": "66378241-acca-407b-b4d0-adbba0fe9671",
      "name": "GlowDischarge"
    }
  },
  "types": [
    "Button",
    "ChartLine",
    "Dialog",
    "Image",
    "Label",
    "NavBar",
    "Table",
    "Checkbox",
    "Radio",
    "TextInput"
  ],
  "currPage": null,
  "script": {
    "121787d4-7da2-4201-ae6e-04b0345e460d": {
      "id": "121787d4-7da2-4201-ae6e-04b0345e460d",
      "name": "New Script"
    }
  },
  "scripts": {
    "a338cf66-509b-4559-ad2c-bcea168e3bb7": {
      "id": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
      "name": "Valve Button Handler",
      "script": "// context = {arg, projectManager}\n//\n// Valve Toggle Button\n// if the valve is open then send close valve\n// else if the vale is closed then send open valve\n\nconst request = require('request')\n\n\nlet element = context.arg.element // element\nlet source = context.arg.source // sources\nlet text = element.parameter.text // see the text\nlet rowId = element.parameter.rowId // see the id\nlet type = element.parameter.type // see the type\n\n\n//\n// Safety condition\n// V14 is open then V9 V5 V13 should be closed\n// V1 is open then V7 V6 V8 should be closed\n//\nlet safe = true\nif( text == \"closed\" && type == \"gas_valve\"  ) {\n  // when trying to open any of above valves check\n  if( rowId == 14 ) {\n  \n    // when V14 is trying to open \n    // V9 V5 V13 should be closed\n    if( \n      source.data.find(o => o.id == 9)['status'] != 'closed' ||\n      source.data.find(o => o.id == 5)['status'] != 'closed' ||\n      source.data.find(o => o.id == 13)['status'] != 'closed'\n    ) {\n      context.projectManager.send(\"info.main\", \"Can't open V14. Make sure V9 V5 V13 is closed\")\n      safe = false\n    }\n  }\n\n  else if( rowId == 1 ) {\n    // when V1 is trying to open \n    // V7 V6 V8 should be closed\n    if( \n      source.data.find(o => o.id == 7)['status'] != 'closed' ||\n      source.data.find(o => o.id == 6)['status'] != 'closed' ||\n      source.data.find(o => o.id == 8)['status'] != 'closed'\n    ) {\n      context.projectManager.send(\"info.main\", \"Can't open V1. Make sure V7 V6 V8 is closed\")\n      safe = false\n    }\n  }\n\n  else if( rowId == 9 || rowId == 5 || rowId == 13 ) {\n    // when V9 V5 V13 is trying to open\n    // make sure V14 is closed\n    if( \n      source.data.find(o => o.id == 14)['status'] != 'closed' \n    ) {\n      context.projectManager.send(\"info.main\", \"Can't open valve. Make sure V14 is closed\")\n      safe = false\n    }\n  }\n\n  else if( rowId == 7 || rowId == 6 || rowId == 8 ) {\n    // when V7 V6 V8 is trying to open\n    // make sure V1 is closed\n    if( \n      source.data.find(o => o.id == 1)['status'] != 'closed' \n    ) {\n      context.projectManager.send(\"info.main\", \"Can't open valve. Make sure V1 is closed\")\n      safe = false\n    }\n  }\n  \n}\n\nif( safe ) {\n\n  // api url\n  const open_url = 'http://thermoc:8081/api/'+type+'/open/'+rowId\n  const close_url = 'http://thermoc:8081/api/'+type+'/close/'+rowId\n\n  function updateText(text) {    \n    let row = source.data.find(o => o.id == element.parameter.rowId)\n    row[element.parameter.columnName] = text\n    context.projectManager.sources()[source.id] = source\n    context.projectManager.send('source.changed', source)\n  }\n\n  if ( text == \"open\" ) {\n    updateText(\"closing\")\n    // close shutter\n    request(close_url)\n  }\n\n  else if ( text == \"closed\" ) {\n    updateText(\"opening\")\n    // open shutter\n    request(open_url)\n  }\n  \n}"
    },
    "642abe6a-5eb4-4674-9332-78ee1e78e57c": {
      "id": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
      "name": "Valve Style",
      "script": "/*\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element) {\n  // change bsStyle depending on the text\n  if( type == \"bsStyle\" ) {\n    if( element.parameter.text.startsWith( \"open\" ) )\n      return \"success\"\n    else if( element.parameter.text.startsWith( \"clos\" ) )\n      return \"danger\"\n    else if( element.parameter.text == \"opening\" || element.parameter.text == \"closing\" )\n      return \"info\"\n  }\n}\n"
    },
    "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32": {
      "id": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
      "name": "MFC Click Handler",
      "script": "// context = { arg, projectManager }\n//\n// open a dialog\n//\nconst dialogId = \"f087a1cd-9769-455b-b10e-d6bafe877138\"\nconst pumpDataId = \"35c97759-90d2-4748-adbb-8a6c37e54336\"\n\n// update dialog property before showing\nlet element = context.arg.element\nlet dialogElement = context.projectManager.elements()[dialogId]\ndialogElement.parameter.header = element.parameter.header\ncontext.projectManager.send(\"element.changed\", dialogElement)\n\n// reset pump data\nlet source = context.projectManager.sources()[pumpDataId]\nsource.data[0]['id'] = element.parameter.id\nsource.data[0]['percentage'] = null\ncontext.projectManager.send(\"source.changed\", source)\n\ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id: dialogId,\n  element: context.arg.element\n})\n"
    },
    "8a39008c-befa-4f08-998f-d8121db15c06": {
      "id": "8a39008c-befa-4f08-998f-d8121db15c06",
      "name": "Gauge Style",
      "script": "/*\n\"preRenderFilter\": \"8a39008c-befa-4f08-998f-d8121db15c06\",\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change textStyle depending on the value\n  if( type == \"textStyle\" ) {\n    let value = element.parameter.text\n    if ( !arg ) arg = {}\n    \n    if( value.startsWith(\"N/A\") || value.startsWith(\"Not\")  ) \n      arg.backgroundColor = \"red\"\n          \n    else \n      arg.backgroundColor = \"green\"\n\n    return arg\n  }\n\n  return arg\n}\n"
    },
    "bb21edfa-a50f-4f5c-be94-80f56de031c1": {
      "id": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
      "name": "Pump Style",
      "script": "/*\n\"preRenderFilter\": \"bb21edfa-a50f-4f5c-be94-80f56de031c1\",\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change textStyle depending on the value\n  if( type == \"textStyle\" ) {\n    let value = element.parameter.text\n    if ( !arg ) arg = {}\n    \n    if( value == \"Started\" ) \n      arg.backgroundColor = \"yellow\"\n\n    else if( value == \"Error\" ) \n      arg.backgroundColor = \"red\"\n                    \n    else \n      arg.backgroundColor = \"orange\"\n\n    return arg\n  }\n\n  return arg\n}\n"
    },
    "4ca966b9-aa32-4937-9cf9-2723d6c8805b": {
      "id": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
      "name": "Pump Click Handler",
      "script": "// context = { arg, projectManager }\n//\n// open a dialog\n//\nconst dialogId = \"e04f2f3a-2726-4adc-9e8b-b4af808854d7\"\nconst pumpDataId = \"0e97751e-530e-4ed2-989d-1be2fd7db114\"\n\n// update dialog property before showing\nlet element = context.arg.element\nlet dialogElement = context.projectManager.elements()[dialogId]\ndialogElement.parameter.header = element.parameter.header\ncontext.projectManager.send(\"element.changed\", dialogElement)\n\n// reset pump data\nlet source = context.projectManager.sources()[pumpDataId]\nsource.data[0]['type'] = element.parameter.type\nsource.data[0]['id'] = element.parameter.id\nsource.data[0]['switch'] = null\ncontext.projectManager.send(\"source.changed\", source)\n\ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id: dialogId,\n  element: context.arg.element\n})\n"
    },
    "42109c56-10ef-4c27-8f23-22b281fe6f15": {
      "id": "42109c56-10ef-4c27-8f23-22b281fe6f15",
      "name": "Shutter Dialog Open",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// MFC OnClickHandler\n// open a dialog\n// \ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id:\"9b4b42f8-ed1d-431a-a904-0f9e19d719c9\",\n  element: context.arg.element,\n  sources: context.projectManager.sources()\n})"
    },
    "24e65f4a-3aeb-4908-bd97-ac08c0b2cee9": {
      "id": "24e65f4a-3aeb-4908-bd97-ac08c0b2cee9",
      "name": "Shutter Table Style",
      "script": "/*\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change bsStyle depending on the text\n  if( type == \"trStyle\" ) {\n    let row = element\n    if( row.status == \"Closed\" )\n      return {\"backgroundColor\": \"#FF5733\", \"color\": \"white\", \"fontWeight\": \"bold\"}\n      \n      if( row.status == \"Open\" )\n        return {\"backgroundColor\": \"#B0FDAF\", \"fontWeight\": \"bold\"}\n  }\n\n  return arg\n}\n"
    },
    "28160644-89f1-4b15-9576-1853a6dc0deb": {
      "id": "28160644-89f1-4b15-9576-1853a6dc0deb",
      "name": "Shutter Open Request",
      "script": "const api_url = \"http://thermoc:8081/api/\"\nconst request = require('request')\n\n// get data source\nconst source = context.arg.source\n\nlet url = api_url + \"shutter/open/\"\nfor( let key in source.data ) {  \n let shutter = source.data[key]\n  if( shutter.open_request == true ) {\n    request(url + shutter.id)\n  }\n}\n\n"
    },
    "14825a83-3d96-46da-babc-473655cff217": {
      "id": "14825a83-3d96-46da-babc-473655cff217",
      "name": "Shutter Close Request",
      "script": "const api_url = \"http://thermoc:8081/api/\"\nconst request = require('request')\n\n// get data source\nconst source = context.arg.source\n\nlet url = api_url + \"shutter/close/\"\nfor( let key in source.data ) {  \n let shutter = source.data[key]\n  if( shutter.close_request == true ) {\n    request(url + shutter.id)\n  }\n}\n\n"
    },
    "da59abf4-7f05-453b-b4e5-09b2ec7ffcb5": {
      "id": "da59abf4-7f05-453b-b4e5-09b2ec7ffcb5",
      "name": "Shutter Dialog Close",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// MFC OnClickHandler\n// open a dialog\n// \ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id:\"46b57b73-3349-49b2-98aa-5acd06fbdfd4\",\n  element: context.arg.element,\n  sources: context.projectManager.sources()\n})"
    },
    "09591ff6-a13f-4d2e-b5c9-0b7dfc9f4def": {
      "id": "09591ff6-a13f-4d2e-b5c9-0b7dfc9f4def",
      "name": "Pump Switch Request",
      "script": "const api_url = \"http://thermoc:8081/api/\"\nconst request = require('request')\n\n// get data source\nconst data = context.arg.source.data[0]\n\nif( data.switch ) {\n  let url = api_url + data.type + \"/\" + data.switch.toLowerCase() + \"/\" + data.id\n  request(url)\n}\n\n"
    },
    "6a9a9e13-0d20-46ed-8657-bac29763a1ba": {
      "id": "6a9a9e13-0d20-46ed-8657-bac29763a1ba",
      "name": "Vaccum Safety Mode Open Dialog",
      "script": "// context = { arg, projectManager }\n//\n// open a dialog\n//\nconst dialogId = \"b7ca9125-dc4a-43b1-83c5-0a0440579353\"\ncontext.projectManager.send(\"dialog.show\", {\n  show: true,  id: dialogId,  element: context.arg.element\n})\n"
    },
    "0f15921a-2743-4105-8738-3cbb9ed8751d": {
      "id": "0f15921a-2743-4105-8738-3cbb9ed8751d",
      "name": "Vacuum Satefy Mode Change Request",
      "script": "const api_url = \"http://thermoc:8081/api/vacuum_mode/set/\"\nconst request = require('request')\n\nmode = {\n \"Idle\": 1,\n \"High Vacuum\": 2,\n \"Primary Vacuum\": 3,\n \"UNSAFE Mode\": 4,\n \"Stop\": 5,\n \"Glow Discharge\": 6\n} \n\n// fetch data\nconst data = context.arg.source.data[0]\n\n\nlet url = api_url + mode[data.goto]\nrequest(url)\n\n\ncontext.projectManager.send(\"info.main\", \"Vacuum Satefy Mode goes to \" + data.goto)"
    },
    "2dd60f79-daad-4473-aa73-4c8950f45d66": {
      "id": "2dd60f79-daad-4473-aa73-4c8950f45d66",
      "name": "Vacuum Safety Style",
      "script": "/*\n\"preRenderFilter\": \"8a39008c-befa-4f08-998f-d8121db15c06\",\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change textStyle depending on the value\n  if( type == \"textStyle\" ) {\n    let value = element.parameter.text\n    if ( !arg ) arg = {}\n    \n    if( value.startsWith(\"UNSAFE\") ||  value.startsWith(\"Stop\") ) \n      arg.backgroundColor = \"pink\"\n          \n    else \n      arg.backgroundColor = \"lightgreen\"\n\n    return arg\n  }\n\n  return arg\n}\n"
    },
    "bf2a2cf8-dd85-40c8-997b-7f8eded25a02": {
      "id": "bf2a2cf8-dd85-40c8-997b-7f8eded25a02",
      "name": "Last Shot Styler",
      "script": "/*\n\"preRenderFilter\": \"bb21edfa-a50f-4f5c-be94-80f56de031c1\",\ncontext:\n  element,\n  filterFunc\n*/\n\nfunction timeSince(date) {\n\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n\ncontext.filterFunc = function(type, element, arg) {\n  // change footerStyle depending on the value\n  if( type == \"footerStyle\" ) {\n    if( element.parameter.footer ) {\n        element.parameter.footer = timeSince(new Date(element.parameter.footer)) + \" ago\"\n    }\n  }\n  return arg\n}\n"
    },
    "0d6e3d38-f5f6-40f7-9a53-be3b4e7a4c4a": {
      "id": "0d6e3d38-f5f6-40f7-9a53-be3b4e7a4c4a",
      "name": "MFC Set Percentage Request",
      "script": "const api_url = \"http://thermoc:8081/api/mfc/set/\"\nconst request = require('request')\n\n// get data source\nconst data = context.arg.source.data[0]\nif( data.percentage > -1 ) {\n  let url = api_url + data.id + \"/\" + data.percentage\nconsole.log(url)\n  request(url)\n}\n\n"
    },
    "db4efb7c-54a0-496b-8539-61833c5eddc1": {
      "id": "db4efb7c-54a0-496b-8539-61833c5eddc1",
      "name": "Gas Safety Mode Open Dialog",
      "script": "// context = { arg, projectManager }\n//\n// open a dialog\n//\nconst dialogId = \"6708ab0b-d82c-4db6-97c9-97299875178a\"\ncontext.projectManager.send(\"dialog.show\", {\n  show: true,  id: dialogId,  element: context.arg.element\n})\n"
    },
    "7753b6be-fe09-40ba-be7f-c5de12bca6db": {
      "id": "7753b6be-fe09-40ba-be7f-c5de12bca6db",
      "name": "Gas Safety Mode Change Request",
      "script": "const api_url = \"http://thermoc:8081/api/gas_mode/set/\"\nconst request = require('request')\n\n// fetch data\nconst data = context.arg.source.data[0]\ndata.mode = data.request\ncontext.projectManager.send(\"source.changed\", context.arg.source)\n\nconst mode = {\n    \"Start\": \"1\",\n    \"Stop\": \"2\",\n    \"Shoot\": \"3\",\n    \"Strnad\": \"4\",\n    \"Idle\": \"5\"\n  }\n\nlet url = api_url + mode[data.request]\nconsole.log(url)\nrequest(url)\n\n\ncontext.projectManager.send(\"info.main\", \"Gas Satefy Mode goes to \" + data.request)"
    },
    "7d706f29-db00-4e7e-aeec-ed606d0a93f7": {
      "id": "7d706f29-db00-4e7e-aeec-ed606d0a93f7",
      "name": "Button Style",
      "script": "/*\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element) {\n  // change bsStyle depending on the text\n  if( type == \"bsStyle\" ) {\n    if( element.parameter.text == \"On\"  )\n      return \"success\"\n    else if( element.parameter.text == \"In\" )\n      return \"success\"\n    else if( element.parameter.text == \"Out\" )\n      return \"danger\"\n    else if( element.parameter.text == \"Stopped\" )\n      return \"danger\"\n    else if( element.parameter.text == \"Running\" )\n      return \"success\"\n    else if( element.parameter.text == \"Off\" )\n      return \"danger\"\n    else if( element.parameter.text == \"opening\" || element.parameter.text == \"closing\" )\n      return \"info\"\n  }\n}\n"
    },
    "5268f8f4-eb1b-49ab-a3ab-ee000815caee": {
      "id": "5268f8f4-eb1b-49ab-a3ab-ee000815caee",
      "name": "Gas Aux Handler",
      "script": "// context = { arg, projectManager}\n//\n// Toggle Button\n// \n\nconst request = require('request')\n\nlet element = context.arg.element // element\nlet source = context.arg.source // sources\nlet text = element.parameter.text // see the text\nlet rowId = element.parameter.rowId // see the id\nlet type = element.parameter.type // see the type\n\n// api url\nconst api = 'http://thermoc:8081/api/gas_info/'+type+\"/\"\n\nfunction updateText(text) {\n  let row = source.data.find(o => o.id == element.parameter.rowId)\n  row[element.parameter.columnName] = text\n  context.projectManager.send('source.changed', source)\n}\n\nif ( text == \"Off\" || text == \"Out\" || text == \"Stopped\" ) {\n  updateText(\"loading ...\")\n  // close shutter\n  request(api+\"1\")\n}\n\nelse if ( text == \"On\" || text == \"In\" || text == \"Running\" ) {\n  updateText(\"loading ...\")\n  // open shutter\n  request(api+\"0\")\n}\n"
    },
    "48ca361f-3672-47ae-a9a7-ba2297867556": {
      "id": "48ca361f-3672-47ae-a9a7-ba2297867556",
      "name": "set Glow Discharge tmp speed",
      "script": "const api_url = \"http://thermoc:8081/api/vacuum_info/set_tmp_speed/\"\nconst request = require('request')\n\n\n// find source\nlet sources = context.projectManager.sources()\nlet source = sources[\"9e138a65-eb33-48e1-bcd9-033bbe11fe56\"]\n// get data source\nconst data = source.data[0]\n\nlet url = api_url + data.glow_discharge_tmp_speed\nrequest(url)\n\n"
    },
    "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf": {
      "id": "0442aefb-bb4b-4e75-9474-47cfa5d8dcbf",
      "name": "Glow Discharge State Style",
      "script": "// context: element, filterFunc\n\ncontext.filterFunc = function(type, element, arg, source) {\n\n  if( type == \"headerStyle\" ) {\n\n    if( source.data[0].state == element.parameter.id ) \n      arg.backgroundColor = \"green\"\n    else\n      arg.backgroundColor = \"white\"\n  }\n\n  return arg\n}\n"
    },
    "9e5f15de-95c9-4037-8931-e171836aea6d": {
      "id": "9e5f15de-95c9-4037-8931-e171836aea6d",
      "name": "Glow Discharge Start",
      "script": "// context = {arg, projectManager}\n//\n// Start Glow Discharge\n//\nlet datasourceId = \"c9571a89-6efa-4de9-8ac7-e7237b8f12ab\"\nlet element = context.arg.element // element\nlet source = context.projectManager.sources()[datasourceId] // sources\nlet state = source.data[0]\nconst timing = 3000\n\n\nstate.run = true\nstate.state = 0\ncontext.projectManager.send(\"source.changed\", source)\n\n\n// loop\nfunction tick() {\n  // check run state\n  if( state.run == false ) {\n    // stop the process\n  }\n\n  else {      \n    setTimeout(tick, timing) // loop every 3 seconds\n    \n    // update state\n    state.state = (state.state % 4)+1\n    \n    context.projectManager.send(\"source.changed\", source)\n  }\n  \n} tick();"
    },
    "fa5f918b-f6ce-4d8f-8ee2-1c64f585815c": {
      "id": "fa5f918b-f6ce-4d8f-8ee2-1c64f585815c",
      "name": "Glow Discharge Stop",
      "script": "// context = {arg, projectManager}\n//\n// Stop Glow Discharge\n//\nlet datasourceId = \"c9571a89-6efa-4de9-8ac7-e7237b8f12ab\"\nlet source = context.projectManager.sources()[datasourceId] // sources\nlet state = source.data[0]\n\nstate.run = false\nstate.state = 0\ncontext.projectManager.send(\"source.changed\", source)\n"
    },
    "d41ea1ac-aa99-4101-8e6e-2b5dd6cd6136": {
      "id": "d41ea1ac-aa99-4101-8e6e-2b5dd6cd6136",
      "name": "Glow Discharge Log",
      "script": "/*\n\"preRenderFilter\": \"bb21edfa-a50f-4f5c-be94-80f56de031c1\",\ncontext:\n  element,\n  filterFunc\n*/\n\nfunction timeSince(date) {\n\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n  return Math.floor(seconds) + \" seconds\";\n}\n\ncontext.filterFunc = function(type, value, arg) {\n  // change td value \n  if( type && type.type == \"td\" && type.colNumber == 0 ) {\n    return timeSince(new Date(parseInt(arg)))\n  }\n  return arg\n}\n"
    }
  }
}