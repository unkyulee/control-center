{
  "elements": {
    "6629d419-36fd-42f9-8dff-431b497f5a4f": {
      "datasource_id": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "6629d419-36fd-42f9-8dff-431b497f5a4f",
      "name": "Gas Rotary GR1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "Rotary GR1",
        "headerStyle": {
          "color": "black"
        },
        "id": 1,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Stopped",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "420px",
      "y": "565px",
      "z": "10"
    },
    "0e3cf34b-0951-4a6c-b81c-3e14f2c0de7d": {
      "datasource_id": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "0e3cf34b-0951-4a6c-b81c-3e14f2c0de7d",
      "name": "Gas TMP",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "TMP",
        "headerStyle": {
          "color": "black"
        },
        "id": 3,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Started",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "750px",
      "y": "515px",
      "z": "10"
    },
    "02318531-9851-4e55-9430-d12b294ba275": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "02318531-9851-4e55-9430-d12b294ba275",
      "name": "Gas Valve G2 V11",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V11",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 11,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 11,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "220px",
      "y": "185px",
      "z": "10"
    },
    "b1b64a3f-ff21-4e96-a441-b41bda247be2": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "b1b64a3f-ff21-4e96-a441-b41bda247be2",
      "name": "Gas Valve Tank6 V13",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V13",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "13",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 13,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "870px",
      "y": "315px",
      "z": "10"
    },
    "745cc759-be71-48fa-843a-1aaa7419db53": {
      "style": "",
      "datasource_id": "56b9f592-2abe-493e-9240-25925cfb6f12",
      "name": "Pipe",
      "script": "",
      "h": "auto",
      "id": "745cc759-be71-48fa-843a-1aaa7419db53",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "auto",
      "type": "Image",
      "y": "65px",
      "x": "0px",
      "script_path": "",
      "z": "1",
      "parameter": {
        "src": "http://localhost:8080/pipe.png"
      },
      "style_path": ""
    },
    "09028476-7433-4424-841c-3021ab0cb1a3": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "09028476-7433-4424-841c-3021ab0cb1a3",
      "name": "Gas Valve G1 V12",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V12",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 12,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 12,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "120px",
      "y": "185px",
      "z": "10"
    },
    "f7ee4a75-179d-4072-bae8-22bb02788bba": {
      "datasource_id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "f7ee4a75-179d-4072-bae8-22bb02788bba",
      "name": "Vacuum Gauge 1G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge 1G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "2",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 2,
        "row_name": "id",
        "text": "89.5091",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "865px",
      "z": 10
    },
    "36b4ad6b-9b73-499e-8101-cce214763b89": {
      "datasource_id": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "h": "100px",
      "id": "36b4ad6b-9b73-499e-8101-cce214763b89",
      "name": "Gas Rotary 2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "Rotary GR2",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Accelerating",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "gas_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "120px",
      "y": "565px",
      "z": "10"
    },
    "03d9bd25-f49a-4ce8-8b85-cc688d271eb6": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "03d9bd25-f49a-4ce8-8b85-cc688d271eb6",
      "name": "Vacuum Valve 1V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "1V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "6",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 6,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "220px",
      "y": "765px",
      "z": "10"
    },
    "f9492cf9-0cab-4bfc-9488-ff78213f657e": {
      "datasource_id": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "f9492cf9-0cab-4bfc-9488-ff78213f657e",
      "name": "Vacuum Pump - TMP VT2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "TMP VT2",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Stopped",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "470px",
      "y": "665px",
      "z": "10"
    },
    "2c2549cd-169e-4572-b82f-b4cd873c724e": {
      "datasource_id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "2c2549cd-169e-4572-b82f-b4cd873c724e",
      "name": "MFC2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "percentage",
        "header": "MFC 2",
        "id": 2,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "row_id": 2,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 16,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "650px",
      "y": "115px",
      "z": "10"
    },
    "307bb7c7-599f-4889-8e1f-85db050a13ad": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "307bb7c7-599f-4889-8e1f-85db050a13ad",
      "name": "Vacuum Vave 2V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "2V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "3",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 3,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "695px",
      "y": "665px",
      "z": "10"
    },
    "9819dc04-99c1-4486-9e49-f2db2afb41d7": {
      "datasource_id": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "9819dc04-99c1-4486-9e49-f2db2afb41d7",
      "name": "Vacuum Pump - Rotary VR1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "Rotary VR1",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Tripped",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "765px",
      "z": "10"
    },
    "537b30ff-675d-4fcd-9450-47d99e21cd42": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "537b30ff-675d-4fcd-9450-47d99e21cd42",
      "name": "Gas Gauge G3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G3",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "3",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 3,
        "row_name": "id",
        "text": "85.4105",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "320px",
      "y": "115px",
      "z": 10
    },
    "370ee4a8-511a-4e76-be1d-5004ba43907a": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "370ee4a8-511a-4e76-be1d-5004ba43907a",
      "name": "Gas Valve Tank3 V8",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "header": "V8",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 8,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 8,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "540px",
      "y": "315px",
      "z": "10"
    },
    "ced973b9-cf68-4442-b316-d8c96425eb8a": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "ced973b9-cf68-4442-b316-d8c96425eb8a",
      "name": "Gas Valve Tank1 V7",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V7",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 7,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 7,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "340px",
      "y": "315px",
      "z": "10"
    },
    "20942c4d-ec44-4bd9-be59-ea1797439966": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "20942c4d-ec44-4bd9-be59-ea1797439966",
      "name": "Gas Valve V14",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V14",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "15",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 14,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "850px",
      "y": "410px",
      "z": "10"
    },
    "bb010823-fde8-4913-a9ea-26b938fb8196": {
      "datasource_id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "bb010823-fde8-4913-a9ea-26b938fb8196",
      "name": "MFC4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "percentage",
        "header": "MFC 4",
        "id": 4,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "row_id": 4,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 9,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "900px",
      "y": "115px",
      "z": "10"
    },
    "be4ab110-d34a-474d-8af2-ff263659a362": {
      "style": "",
      "datasource_id": "",
      "name": "Valve - Needle",
      "script": "",
      "h": "100px",
      "id": "be4ab110-d34a-474d-8af2-ff263659a362",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "80px",
      "type": "Label",
      "y": "115px",
      "x": "450px",
      "script_path": "",
      "z": "10",
      "parameter": {
        "header": "Valve",
        "style": {
          "color": "black",
          "fontSize": "80%",
          "backgroundColor": "white"
        },
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center",
          "backgroundColor": "red"
        },
        "text": "needle"
      },
      "style_path": ""
    },
    "f087a1cd-9769-455b-b10e-d6bafe877138": {
      "style": "",
      "datasource_id": "",
      "name": "Dialog MFC",
      "script": "const react = require('react')\nconst b = require('react-bootstrap')\nconst e = react.createElement\nconst { ipcRenderer } = require('electron')\n\n/*\n Set Dialog Body\n*/\nfunction onChange(e) {\n  context.parent.setState({ value: e.target.value  })\n}\n\n// set initial value\ncontext.parent.setState({\n  value: parseInt(context.arg.element.parameter.text)\n})\n\nlet body = e(b.FormGroup, null,\n  e(b.ControlLabel, {}, \"Set flow percentage for \" + context.arg.element.parameter.header),\n  e(b.InputGroup, null,\n    e(b.FormControl, {\"type\": \"text\", \"value\": context.parent.state.value, onChange: onChange}, null),\n    e(b.InputGroup.Addon, {}, \"%\"),\n  )\n)\n\n/*\n Set Dialog Button\n*/\ncontext.parent.setState({\n  header: context.arg.element.parameter.header,\n  onOK: () => {\n    // send open message to the script engine\n    const data = {\n      element_id: context.arg.element.id,\n      value: context.parent.state.value\n    }\n    ipcRenderer.send(\"mfc.control\", data)\n\n    // close the dialog\n    ipcRenderer.send(\"dialog.show\", {id: context.parent.props.element.id, show: false})\n  },\n  body: body\n})\n",
      "h": "",
      "id": "f087a1cd-9769-455b-b10e-d6bafe877138",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "",
      "type": "Dialog",
      "y": "65px",
      "x": "0",
      "script_path": "./script/dialog_mfc.js",
      "z": "10",
      "parameter": {
        "header": "MFC Control Dialog",
        "bsSize": "small"
      },
      "style_path": ""
    },
    "fde8debe-e1fe-4030-b8f0-dea77a7284da": {
      "datasource_id": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "h": "100px",
      "id": "fde8debe-e1fe-4030-b8f0-dea77a7284da",
      "name": "Vacuum Pump - TMP VT1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "status",
        "header": "TMP VT1",
        "headerStyle": {
          "color": "black"
        },
        "id": 2,
        "onClick": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
        "preRenderFilter": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
        "row_id": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "yellow",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "Error",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "vacuum_pump"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "470px",
      "y": "865px",
      "z": "10"
    },
    "608325e6-4dc2-4422-874b-d598075b5fe7": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "auto",
      "id": "608325e6-4dc2-4422-874b-d598075b5fe7",
      "name": "Gas Gauge G2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G2",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "2",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 2,
        "row_name": "id",
        "text": "52.7125",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "220px",
      "y": "115px",
      "z": "10"
    },
    "98d96606-40e3-4b02-bd08-965fdc2d99a8": {
      "datasource_id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "98d96606-40e3-4b02-bd08-965fdc2d99a8",
      "name": "Vacuum Gauge TG1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge TG1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "1",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 1,
        "row_name": "id",
        "text": "47.1337",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "800px",
      "y": "765px",
      "z": 10
    },
    "0d4f0c50-fe05-49d2-a222-a01988dd5553": {
      "datasource_id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "0d4f0c50-fe05-49d2-a222-a01988dd5553",
      "name": "MFC3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "percentage",
        "header": "MFC 3",
        "id": 3,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "row_id": 3,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 58,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "800px",
      "y": "115px",
      "z": "10"
    },
    "fde8446c-279a-47bf-a25c-925f4f56e78d": {
      "datasource_id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "fde8446c-279a-47bf-a25c-925f4f56e78d",
      "name": "Vacuum Gauge 1G3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge 1G3",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "4",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 4,
        "row_name": "id",
        "text": "21.4823",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "330px",
      "y": "765px",
      "z": 10
    },
    "eae36fa4-1c33-4be1-8cb0-3415fb411b28": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "eae36fa4-1c33-4be1-8cb0-3415fb411b28",
      "name": "Gas Valve Rotary 2 CV2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "CV2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "16",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 16,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "115px",
      "y": "465px",
      "z": "10"
    },
    "dd5d5d17-b251-4623-988b-fac0c0820d7e": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "dd5d5d17-b251-4623-988b-fac0c0820d7e",
      "name": "Gas Valve Tank5 V5",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V5",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 5,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 5,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "770px",
      "y": "315px",
      "z": "10"
    },
    "fdc38847-15c1-49a5-82f3-59f56208be01": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "fdc38847-15c1-49a5-82f3-59f56208be01",
      "name": "Valve - Main Pipe 1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 6,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 2,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "605px",
      "y": "271px",
      "z": "10"
    },
    "8a89c89c-9eb6-4fb0-89ba-f92e17dd3f15": {
      "datasource_id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "h": "100px",
      "id": "8a89c89c-9eb6-4fb0-89ba-f92e17dd3f15",
      "name": "MFC1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "percentage",
        "header": "MFC 1",
        "id": 1,
        "onClick": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
        "row_id": 1,
        "row_name": "id",
        "style": {
          "backgroundColor": "green",
          "color": "white",
          "fontSize": "80%"
        },
        "text": 82,
        "textStyle": {
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "MFC"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "550px",
      "y": "115px",
      "z": "10"
    },
    "e3ba3cb4-ad4f-4952-b690-de9ebd54a09d": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "e3ba3cb4-ad4f-4952-b690-de9ebd54a09d",
      "name": "Vacuum - Valve 1V2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "disabled": true,
        "header": "1V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "4",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 4,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "380px",
      "y": "865px",
      "z": "10"
    },
    "041220e1-04dc-476f-b03d-c25d02a876ad": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "041220e1-04dc-476f-b03d-c25d02a876ad",
      "name": "Gas Valve TMP CV1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "CV1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "15",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 15,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "750px",
      "y": "465px",
      "z": "10"
    },
    "9b7b45bd-8005-4649-a120-dfe66650d3b4": {
      "datasource_id": "",
      "h": "100px",
      "id": "9b7b45bd-8005-4649-a120-dfe66650d3b4",
      "name": "Vacuum Controller",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "header": "Vacuum Controller",
        "headerStyle": {
          "color": "black"
        },
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "SAFE",
        "textStyle": {
          "backgroundColor": "lightgreen",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "mode_vacuum"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "140px",
      "x": "1100px",
      "y": "665px",
      "z": 10
    },
    "6708ab0b-d82c-4db6-97c9-97299875178a": {
      "style": "",
      "datasource_id": "",
      "name": "Dialog Gas Mode",
      "script": "const react = require('react')\nconst b = require('react-bootstrap')\nconst e = react.createElement\nconst { ipcRenderer } = require('electron')\n\n/*\n Set Dialog Body\n*/\nfunction onChange(e) {\n  context.parent.setState({ switch: e.target.id  })\n}\n\nlet body = e(b.FormGroup, null,\n  e(b.InputGroup, null,\n    e('p', {}, \"Change Safety Mode \" + context.arg.element.parameter.header),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"ON\", onChange: onChange}, \"ON\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"OFF\", onChange: onChange}, \"OFF\")\n  )\n)\n\n/*\n Set Dialog Button\n*/\ncontext.parent.setState({\n  header: context.arg.element.parameter.header,\n  onOK: () => {\n    // send open message to the script engine\n    const data = {\n      element_id: context.arg.element.id,\n      switch: context.parent.state.switch\n    }\n    ipcRenderer.send(\"gas_rotary.switch\", data)\n\n    // close the dialog\n    ipcRenderer.send(\"dialog.show\", {id: context.parent.props.element.id, show: false})\n  },\n  body: body\n})\n",
      "h": "",
      "id": "6708ab0b-d82c-4db6-97c9-97299875178a",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "",
      "type": "Dialog",
      "y": "65px",
      "x": "0",
      "script_path": "./script/dialog_mode_gas.js",
      "z": "10",
      "parameter": {
        "header": "Gas Controller Mode",
        "bsSize": "small"
      },
      "style_path": ""
    },
    "d4155c3e-3d49-436d-a249-b4ab7d1bcfa7": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "d4155c3e-3d49-436d-a249-b4ab7d1bcfa7",
      "name": "Vacuum - Valve 2V2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "disabled": true,
        "header": "2V2",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "5",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 5,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "380px",
      "y": "665px",
      "z": "10"
    },
    "55a28e26-6413-4477-bcb7-1fd06822c70a": {
      "style": "",
      "datasource_id": "",
      "name": "Dialog Vacuum Mode",
      "script": "const react = require('react')\nconst b = require('react-bootstrap')\nconst e = react.createElement\nconst { ipcRenderer } = require('electron')\n\n/*\n Set Dialog Body\n \"1 - IDLE\",\n \"2 - HIGH VACUUM\",\n \"3 - PRIMARY VACUUM\",\n \"4 - UNSAFE MODE\",\n \"5 - STOP\",\n \"6 - GLOW DISCHARGE\"\n*/\nfunction onChange(e) {\n  context.parent.setState({ mode: e.target.id  })\n}\n\nlet body = e(b.FormGroup, null,\n  e(b.InputGroup, null,\n    e('p', {}, \"Safety mode for Vacuum Controller\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"1\", onChange: onChange}, \"IDLE\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"2\", onChange: onChange}, \"HIGH VACUUM\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"3\", onChange: onChange}, \"PRIMARY VACUUM\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"4\", onChange: onChange}, \"UNSAFE MODE\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"5\", onChange: onChange}, \"STOP\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"6\", onChange: onChange}, \"GLOW DISCHARGE\")\n  )\n)\n\n/*\n Set Dialog Button\n*/\ncontext.parent.setState({\n  header: context.arg.element.parameter.header,\n  onOK: () => {\n    // send open message to the script engine\n    const data = {\n      element_id: context.arg.element.id,\n      switch: context.parent.state.switch\n    }\n    ipcRenderer.send(\"gas_rotary.switch\", data)\n\n    // close the dialog\n    ipcRenderer.send(\"dialog.show\", {id: context.parent.props.element.id, show: false})\n  },\n  body: body\n})\n",
      "h": "",
      "id": "55a28e26-6413-4477-bcb7-1fd06822c70a",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "",
      "type": "Dialog",
      "y": "65px",
      "x": "0",
      "script_path": "./script/dialog_mode_vacuum.js",
      "z": "10",
      "parameter": {
        "header": "Vacuum Controller Mode",
        "bsSize": "small"
      },
      "style_path": ""
    },
    "ce63ae4c-ad75-4899-8048-2f0b8f58f4bd": {
      "datasource_id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "h": "100px",
      "id": "ce63ae4c-ad75-4899-8048-2f0b8f58f4bd",
      "name": "Vacuum Gauge 2G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge 2G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "3",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 3,
        "row_name": "id",
        "text": "56.4031",
        "textStyle": {
          "backgroundColor": "orange",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "665px",
      "z": 10
    },
    "39781d78-a398-4cff-9a68-f83914733318": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "39781d78-a398-4cff-9a68-f83914733318",
      "name": "Vacuum Valve Window 3V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "header": "3V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "1",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 1,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "980px",
      "y": "765px",
      "z": "10"
    },
    "231e1f97-00e3-4a42-8958-dcac8ad20dd7": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "231e1f97-00e3-4a42-8958-dcac8ad20dd7",
      "name": "Gas Gauge G5",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G5",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "5",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 5,
        "row_name": "id",
        "text": "74.8312",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "1000px",
      "y": "265px",
      "z": 10
    },
    "308a78bb-dbc2-489f-a2a0-b37130637941": {
      "datasource_id": "",
      "h": "auto",
      "id": "308a78bb-dbc2-489f-a2a0-b37130637941",
      "name": "Shutter - Open",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsStyle": "success",
        "onClick": "42109c56-10ef-4c27-8f23-22b281fe6f15",
        "shutters": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
        "text": "Open",
        "type": "shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "1100px",
      "y": "70px",
      "z": "10"
    },
    "0be555f9-7716-44dc-9870-8a212cf6429c": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "0be555f9-7716-44dc-9870-8a212cf6429c",
      "name": "Gas Gauge G4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G4",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "4",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 4,
        "row_name": "id",
        "text": "81.2385",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "265px",
      "z": 10
    },
    "9b4b42f8-ed1d-431a-a904-0f9e19d719c9": {
      "datasource_id": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "h": "",
      "id": "9b4b42f8-ed1d-431a-a904-0f9e19d719c9",
      "name": "Dialog Shutter",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "small",
        "header": "Open Shutter"
      },
      "script": "const react = require('react')\nconst b = require('react-bootstrap')\nconst e = react.createElement;\nconst { ipcRenderer } = require('electron')\n\n/* Parameters\n*/\nlet element = context.arg.element\nlet sources = context.arg.sources ? context.arg.sources : {}\nlet source = sources[element.parameter.shutters]\nlet state = context.parent.state\nif( !state.checked ) state.checked = {}\n\n/*\n Set Dialog Body\n*/\nfunction onChange(e) {\n  let checked = state.checked\n  if(!state.checked) checked = {}\n  checked[e.target.id] = e.target.checked\n  context.parent.setState({ checked: checked })\n}\n\nlet shutters = []\nlet body = null\n\nsource.data.forEach( (shutter, i) => {\n  let checked = false\n  checked = state.checked[shutter.id]\n  shutters.push(\n    e(b.Checkbox, {\"key\": shutter.id,\"checked\": checked, \"id\": shutter.id, onChange: onChange}, shutter.title)\n  )\n})\n\n\nbody = e(b.FormGroup, null,\n  e(b.InputGroup, null,\n    e('p', {}, \"Select shutter to \" + element.parameter.text),\n    shutters\n  )\n)\n\n/*\n Set Dialog Button\n*/\ncontext.parent.setState({\n  header: element.parameter.text + \" Shutters\",\n  onOK: () => {\n    // send open message to the script engine\n    ipcRenderer.send(\"shutter.switch\", {\n      shutters: state.checked,\n      switch: element.parameter.text })\n\n    // close the dialog\n    ipcRenderer.send(\"dialog.show\", {id: context.parent.props.element.id, show: false})\n  },\n  body: body\n})\n",
      "script_path": "./script/dialog_shutter.js",
      "style": "",
      "style_path": "",
      "type": "Dialog",
      "w": "",
      "x": "0",
      "y": "65px",
      "z": "10"
    },
    "85940608-ef34-4e35-8727-afe14a8bb38a": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "85940608-ef34-4e35-8727-afe14a8bb38a",
      "name": "Gas Gauge G7",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G7",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "7",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 7,
        "row_name": "id",
        "text": "42.7351",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "600px",
      "y": "565px",
      "z": 10
    },
    "046e4c6a-66c0-4190-8fca-bd45e8793dc0": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "046e4c6a-66c0-4190-8fca-bd45e8793dc0",
      "name": "Vacuum Valve 2V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true,
        "5a5356cc-eda0-4563-a835-2e59767568b4": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "disabled": true,
        "header": "2V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "7",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 7,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "600px",
      "y": "765px",
      "z": "10"
    },
    "7d74e671-cccf-4428-95bb-86146f9016a3": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "7d74e671-cccf-4428-95bb-86146f9016a3",
      "name": "Gas Valve Tank4 V9",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "header": "V9",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 9,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 9,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "670px",
      "y": "315px",
      "z": "10"
    },
    "3d526af7-f712-4cbd-abd7-ab9838e4b481": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "3d526af7-f712-4cbd-abd7-ab9838e4b481",
      "name": "Gas Valve MFC3 MFC4 V3",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V3",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 3,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 3,
        "row_name": "id",
        "text": "closed",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "850px",
      "y": "205px",
      "z": "10"
    },
    "5fafc359-c7dc-4509-a40e-fbf274fc0ea9": {
      "style": "",
      "datasource_id": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "name": "Table - Shutter",
      "script": "",
      "h": "auto",
      "id": "5fafc359-c7dc-4509-a40e-fbf274fc0ea9",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "300px",
      "type": "Table",
      "y": "110px",
      "x": "1100px",
      "script_path": "",
      "z": "10",
      "parameter": {
        "headers": [
          {
            "field": "id",
            "width": "10%",
            "text": "ID"
          },
          {
            "field": "title",
            "width": "70%",
            "text": "Shutter"
          },
          {
            "field": "status",
            "width": "20%",
            "text": "Status"
          }
        ],
        "style": {
          "color": "black",
          "backgroundColor": "white"
        }
      },
      "style_path": ""
    },
    "44e6c076-53b6-483a-9fee-d7d33c1b1b35": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "44e6c076-53b6-483a-9fee-d7d33c1b1b35",
      "name": "Vacuum Vave 1V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "1V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "2",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 2,
        "row_name": "id",
        "text": "closed",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "695px",
      "y": "865px",
      "z": "10"
    },
    "2d04631b-a7f6-46d9-9bee-25039ed5f3bf": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "2d04631b-a7f6-46d9-9bee-25039ed5f3bf",
      "name": "Gas Valve Tank2 V6",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V6",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 6,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 6,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "440px",
      "y": "315px",
      "z": "10"
    },
    "70dbe149-0141-47e3-8259-9e9a6e87e465": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "70dbe149-0141-47e3-8259-9e9a6e87e465",
      "name": "Gas Gauge G8",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G8",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "8",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 8,
        "row_name": "id",
        "text": "73.8494",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "20px",
      "y": "115px",
      "z": 10
    },
    "30d74ff0-182b-40dd-b256-5eeb042c7244": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "100px",
      "id": "30d74ff0-182b-40dd-b256-5eeb042c7244",
      "name": "Gas Gauge G6",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G6",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "6",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 6,
        "row_name": "id",
        "text": "22.0025",
        "textStyle": {
          "backgroundColor": "red",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "450px",
      "y": "415px",
      "z": "10"
    },
    "f0ac75ca-9a37-48d0-a41c-a880ad6b9bfe": {
      "h": "auto",
      "id": "f0ac75ca-9a37-48d0-a41c-a880ad6b9bfe",
      "name": "NavBar",
      "pages": {
        "all": true
      },
      "parameter": {
        "fixedTop": true,
        "fluid": true,
        "header": "COMPASS Control",
        "inverse": true,
        "navigation": {
          "2": {
            "name": "Vacuum Control",
            "page": "4d1d9647-0e0d-42f6-b324-0267f916a9ca"
          },
          "3": {
            "name": "Glow Discharge",
            "page": ""
          }
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "NavBar",
      "w": "100%",
      "x": "0px",
      "y": "0px",
      "z": "10"
    },
    "e04f2f3a-2726-4adc-9e8b-b4af808854d7": {
      "style": "",
      "datasource_id": "",
      "name": "Dialog Gas Pump On / Off",
      "script": "const react = require('react')\nconst b = require('react-bootstrap')\nconst e = react.createElement\nconst { ipcRenderer } = require('electron')\n\n/*\n Set Dialog Body\n*/\nfunction onChange(e) {\n  context.parent.setState({ switch: e.target.id  })\n}\n\nlet body = e(b.FormGroup, null,\n  e(b.InputGroup, null,\n    e('p', {}, \"Switch \" + context.arg.element.parameter.header),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"ON\", onChange: onChange}, \"ON\"),\n    e(b.Radio, {\"name\": \"mode\", \"id\": \"OFF\", onChange: onChange}, \"OFF\")\n  )\n)\n\n/*\n Set Dialog Button\n*/\ncontext.parent.setState({\n  header: context.arg.element.parameter.header,\n  onOK: () => {\n    // send open message to the script engine\n    const data = {\n      element_id: context.arg.element.id,\n      switch: context.parent.state.switch\n    }\n    ipcRenderer.send(\"gas_rotary.switch\", data)\n\n    // close the dialog\n    ipcRenderer.send(\"dialog.show\", {id: context.parent.props.element.id, show: false})\n  },\n  body: body\n})\n",
      "h": "",
      "id": "e04f2f3a-2726-4adc-9e8b-b4af808854d7",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "w": "",
      "type": "Dialog",
      "y": "65px",
      "x": "0",
      "script_path": "./script/dialog_gas_pump.js",
      "z": "10",
      "parameter": {
        "header": "Gas Pump Dialog",
        "bsSize": "small"
      },
      "style_path": ""
    },
    "f407cf94-1372-4dca-95d7-de146974d199": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "f407cf94-1372-4dca-95d7-de146974d199",
      "name": "Gas Valve MFC1 MFC2",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V4",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 4,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 4,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "545px",
      "y": "205px",
      "z": "10"
    },
    "246bf44a-7462-429e-a135-03ae8653164a": {
      "datasource_id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "h": "auto",
      "id": "246bf44a-7462-429e-a135-03ae8653164a",
      "name": "Vacuum - Valve 1V4",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "disabled": true,
        "header": "1V4",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "8",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 8,
        "row_name": "id",
        "text": "open",
        "type": "vacuum_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "50px",
      "x": "140px",
      "y": "765px",
      "z": "10"
    },
    "e1c9daf8-ebf0-4eaa-b5d1-ea31d28ec9e8": {
      "datasource_id": "",
      "h": "auto",
      "id": "e1c9daf8-ebf0-4eaa-b5d1-ea31d28ec9e8",
      "name": "Shutter - Close",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsStyle": "danger",
        "onClick": "42109c56-10ef-4c27-8f23-22b281fe6f15",
        "shutters": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
        "text": "Close",
        "type": "shutter"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "auto",
      "x": "1170px",
      "y": "70px",
      "z": "10"
    },
    "9209bed9-15b7-464a-a443-e4abc65589d9": {
      "datasource_id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "h": "auto",
      "id": "9209bed9-15b7-464a-a443-e4abc65589d9",
      "name": "Gas Gauge G1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "column_name": "pressure",
        "header": "Gauge G1",
        "headerStyle": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "id": "1",
        "preRenderFilter": "8a39008c-befa-4f08-998f-d8121db15c06",
        "row_id": 1,
        "row_name": "id",
        "text": "25.9891",
        "textStyle": {
          "backgroundColor": "green",
          "fontSize": "100%",
          "textAlign": "center"
        }
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "80px",
      "x": "120px",
      "y": "115px",
      "z": 10
    },
    "86589015-41b8-4749-acd6-605198f0120a": {
      "datasource_id": "",
      "h": "100px",
      "id": "86589015-41b8-4749-acd6-605198f0120a",
      "name": "Gas Controller",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "header": "Gas Controller",
        "headerStyle": {
          "color": "black"
        },
        "style": {
          "backgroundColor": "white",
          "color": "black",
          "fontSize": "80%"
        },
        "text": "SAFE",
        "textStyle": {
          "backgroundColor": "lightgreen",
          "fontSize": "120%",
          "textAlign": "center"
        },
        "type": "mode_gas"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Label",
      "w": "150px",
      "x": "1250px",
      "y": "665px",
      "z": 10
    },
    "37fb73f3-8038-48b2-b5b8-6e6dbec48754": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "37fb73f3-8038-48b2-b5b8-6e6dbec48754",
      "name": "Gas Valve V1",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "danger",
        "column_name": "status",
        "header": "V1",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": "13",
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 1,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "115px",
      "y": "345px",
      "z": "10"
    },
    "be8ee877-c2bf-4a60-a56b-ed9f7cde2bd1": {
      "datasource_id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "h": "auto",
      "id": "be8ee877-c2bf-4a60-a56b-ed9f7cde2bd1",
      "name": "Gas Valve G3 V10",
      "pages": {
        "4d1d9647-0e0d-42f6-b324-0267f916a9ca": true
      },
      "parameter": {
        "bsSize": "xsmall",
        "bsStyle": "success",
        "column_name": "status",
        "header": "V10",
        "headerStyle": {
          "fontSize": "90%",
          "fontWeight": "bold"
        },
        "id": 10,
        "onClick": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
        "preRenderFilter": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
        "row_id": 10,
        "row_name": "id",
        "text": "open",
        "type": "gas_valve"
      },
      "script": "",
      "script_path": "",
      "style": "",
      "style_path": "",
      "type": "Button",
      "w": "80px",
      "x": "320px",
      "y": "185px",
      "z": "10"
    }
  },
  "filepath": "/home/lee/Project/control-center/doc/project_template.json",
  "sources": {
    "eca742ec-866d-4ed5-b9d8-01e59ef38970": {
      "data": [
        {
          "id": 1,
          "status": "Open",
          "title": "this is second shutter item"
        },
        {
          "id": 2,
          "status": "Closed",
          "title": "third shutter for Eva"
        },
        {
          "id": 3,
          "status": "Closed",
          "title": "fourth shutter for jojo"
        },
        {
          "id": 4,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 5,
          "status": "Open",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 6,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 7,
          "status": "Open",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 8,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 9,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 10,
          "status": "Open",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 11,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 12,
          "status": "Open",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 13,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 14,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 15,
          "status": "Closed",
          "title": "fourth shutter for jozo"
        },
        {
          "id": 16,
          "status": "Closed",
          "title": "this is first shutter item"
        }
      ],
      "id": "eca742ec-866d-4ed5-b9d8-01e59ef38970",
      "name": "Shutter",
      "run_id": "958daac4-fb05-4da4-a2c2-0fd233960566",
      "script": "const request = require('request')\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/shutter/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/shutter/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      shutters = context.source.data\n      shutters.forEach( (target) => {\n        response.shutter.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 10000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7": {
      "data": [
        {
          "id": 1,
          "status": "open"
        },
        {
          "id": 2,
          "status": "closed"
        },
        {
          "id": 3,
          "status": "closed"
        },
        {
          "id": 4,
          "status": "closed"
        },
        {
          "id": 5,
          "status": "closed"
        },
        {
          "id": 6,
          "status": "open"
        },
        {
          "id": 7,
          "status": "closed"
        },
        {
          "id": 8,
          "status": "open"
        },
        {
          "id": 9,
          "status": "closed"
        },
        {
          "id": 10,
          "status": "closed"
        },
        {
          "id": 11,
          "status": "open"
        },
        {
          "id": 12,
          "status": "open"
        },
        {
          "id": 13,
          "status": "closed"
        },
        {
          "id": 14,
          "status": "open"
        },
        {
          "id": 15,
          "status": "open"
        },
        {
          "id": 16,
          "status": "open"
        }
      ],
      "id": "f39a95d5-ef50-4d9a-95f5-60ae6b9fcbd7",
      "name": "Gas Valves",
      "run_id": "c20384f0-71bf-4f29-84c9-bb9d103dfff3",
      "script": "const request = require('request')\n\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/gas_valve/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/gas_valve/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      valves = context.source.data\n      valves.forEach( (target) => {\n        response.gas_valve.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 5000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "838ec61c-0450-422c-ba0f-8aadd542ca02": {
      "data": [
        {
          "status": 3,
          "percentage": 23,
          "id": 1
        },
        {
          "status": 8,
          "percentage": 91,
          "id": 2
        },
        {
          "status": 1,
          "percentage": 54,
          "id": 3
        },
        {
          "status": 1,
          "percentage": 25,
          "id": 4
        }
      ],
      "id": "838ec61c-0450-422c-ba0f-8aadd542ca02",
      "name": "MFC",
      "run_id": "77c9f763-ea85-4d9a-9773-9e4ce6a29c79",
      "script": "const request = require('request')\n\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/mfc/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/mfc/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      context.source.data = response.mfc\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 10000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a": {
      "data": [
        {
          "pressure": "12.4458",
          "id": 1,
          "exp": 58
        },
        {
          "pressure": "61.9479",
          "id": 2,
          "exp": 1
        },
        {
          "pressure": "22.8524",
          "id": 3,
          "exp": 41
        },
        {
          "pressure": "34.8895",
          "id": 4,
          "exp": -18
        },
        {
          "pressure": "49.7562",
          "id": 5,
          "exp": 22
        },
        {
          "pressure": "12.3387",
          "id": 6,
          "exp": 62
        },
        {
          "pressure": "34.9782",
          "id": 7,
          "exp": 3
        },
        {
          "pressure": "41.2768",
          "id": 8,
          "exp": 43
        }
      ],
      "id": "b3a68eb4-e9ae-4b8c-a16f-2fa223c2b28a",
      "name": "Gas Gauge",
      "run_id": "378696ac-1558-4709-ad65-2cfa0fe0743d",
      "script": "const request = require('request')\n\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/gas_gauge/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/gas_gauge/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      context.source.data = response.gas_gauge\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      // setTimeout( tick , 5000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "a57331b6-7756-4645-a489-0ddec11cb9bb": {
      "data": [
        {
          "id": 1,
          "status": "Started"
        },
        {
          "id": 2,
          "status": "Error"
        },
        {
          "id": 3,
          "status": "Stopping"
        }
      ],
      "id": "a57331b6-7756-4645-a489-0ddec11cb9bb",
      "name": "Gas Pump",
      "run_id": "b36843e4-7375-4eb9-a47e-ab581320e22b",
      "script": "const request = require('request')\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/gas_pump/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/gas_pump/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      pumps = context.source.data\n      pumps.forEach( (target) => {\n        response.gas_pump.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 5000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "6b03887c-c62c-435e-87e5-6c8ac06078b4": {
      "data": [
        {
          "id": 1,
          "status": "Started"
        },
        {
          "id": 2,
          "status": "Stopped"
        },
        {
          "id": 3,
          "status": "Error"
        }
      ],
      "id": "6b03887c-c62c-435e-87e5-6c8ac06078b4",
      "name": "Vacuum Pump",
      "run_id": "fa37547b-43ac-4fb3-ad8d-b5a38e3f2f55",
      "script": "const request = require('request')\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/vacuum_pump/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/vacuum_pump/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      pumps = context.source.data\n      pumps.forEach( (target) => {\n        response.vacuum_pump.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 10000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "008b7645-10c6-46fe-82d0-745c43a4f74a": {
      "data": [
        {
          "pressure": "30.0532",
          "id": 1,
          "exp": 58
        },
        {
          "pressure": "48.4637",
          "id": 2,
          "exp": -8
        },
        {
          "pressure": "55.6622",
          "id": 3,
          "exp": 31
        },
        {
          "pressure": "82.0538",
          "id": 4,
          "exp": -1
        }
      ],
      "id": "008b7645-10c6-46fe-82d0-745c43a4f74a",
      "name": "Vacuum Gauge",
      "run_id": "99394cc7-d0ad-4565-9e9a-7fcb03ca4808",
      "script": "const request = require('request')\n\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/vacuum_gauge/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/vacuum_gauge/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      context.source.data = response.vacuum_gauge\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 5000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2": {
      "data": [
        {
          "id": 1,
          "status": "closed"
        },
        {
          "id": 2,
          "status": "closed"
        },
        {
          "id": 3,
          "status": "open"
        },
        {
          "id": 4,
          "status": "closed"
        },
        {
          "id": 5,
          "status": "closed"
        },
        {
          "id": 6,
          "status": "closed"
        },
        {
          "id": 7,
          "status": "closed"
        },
        {
          "id": 8,
          "status": "open"
        }
      ],
      "id": "5e1f0c69-cef9-4ad7-bf34-e480b74a92d2",
      "name": "Vacuum Valve",
      "run_id": "033586f1-96b3-4c50-8ed7-004369401c9a",
      "script": "const request = require('request')\n\nvar run_id = context.source.run_id\n\n// run http://localhost:8081/api/vacuum_valve/status to get the status\nfunction tick() {\n  // avoid running duplicate timers\n  if( run_id != context.source.run_id ) {\n    console.log(\"removing timer handler \" + context.source.run_id + \" \" + run_id)\n    return\n  }\n\n  let url = \"http://localhost:8081/api/vacuum_valve/status\"\n  request(url, function(err, resp, body) {\n    let response = {}\n    try { response = JSON.parse(body) } catch(err) {}\n\n    if ( response.status == \"ok\" ) {\n      // update shutter data\n      valves = context.source.data\n      valves.forEach( (target) => {\n        response.vacuum_valve.forEach( (source) => {\n          if( target.id == source.id ) {\n            // update status of the shutter\n            target.status = source.status\n          }\n        } )\n      } )\n\n      // send out the update to all windows\n      context.projectManager.send('source.changed', context.source)\n\n      // run next interval\n      setTimeout( tick , 10000 )\n    }\n\n  })\n}\n\n// initiate the script\ntick()\n"
    },
    "bc03e9dc-b489-4c5b-a059-799fe9d3712e": {
      "data": [
        {
          "amt": 2400,
          "name": "Page A",
          "pv": 2400,
          "uv": 24000
        },
        {
          "amt": 2210,
          "name": "Page B",
          "pv": 1398,
          "uv": 3000
        },
        {
          "amt": 2290,
          "name": "Page C",
          "pv": 9800,
          "uv": 2000
        },
        {
          "amt": 2000,
          "name": "Page D",
          "pv": 3908,
          "uv": 2780
        },
        {
          "amt": 2181,
          "name": "Page E",
          "pv": 4800,
          "uv": 1890
        },
        {
          "amt": 2500,
          "name": "Page F",
          "pv": 3800,
          "uv": 1390
        },
        {
          "amt": 2100,
          "name": "Page G",
          "pv": 6300,
          "uv": 3490
        }
      ],
      "id": "bc03e9dc-b489-4c5b-a059-799fe9d3712e",
      "name": "Chart Test Data",
      "run_id": "2f1b1ef0-492a-4879-9a9c-648b6ca84bb4",
      "script": ""
    }
  },
  "pages": {
    "5a5356cc-eda0-4563-a835-2e59767568b4": {
      "id": "5a5356cc-eda0-4563-a835-2e59767568b4",
      "name": "Home"
    },
    "4d1d9647-0e0d-42f6-b324-0267f916a9ca": {
      "id": "4d1d9647-0e0d-42f6-b324-0267f916a9ca",
      "name": "Controller"
    }
  },
  "types": [
    "Button",
    "Chart",
    "Dialog",
    "Image",
    "Label",
    "NavBar",
    "Table"
  ],
  "currPage": {
    "id": "4d1d9647-0e0d-42f6-b324-0267f916a9ca",
    "name": "Controller"
  },
  "script": {
    "121787d4-7da2-4201-ae6e-04b0345e460d": {
      "id": "121787d4-7da2-4201-ae6e-04b0345e460d",
      "name": "New Script"
    }
  },
  "scripts": {
    "a338cf66-509b-4559-ad2c-bcea168e3bb7": {
      "id": "a338cf66-509b-4559-ad2c-bcea168e3bb7",
      "name": "Valve Button Handler",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// Valve Toggle Button\n// if the valve is open then send close valve\n// else if the vale is closed then send open valve\n\nconst request = require('request')\n\n// element\nlet element = context.arg.element\n// sources\nlet source = context.arg.source\n// see the text\nlet text = element.parameter.text\n// see the id\nlet row_id = element.parameter.row_id\n// see the type\nlet type = element.parameter.type\n\n// api url\nconst open_url = 'http://localhost:8081/api/'+type+'/open/'+row_id\nconst close_url = 'http://localhost:8081/api/'+type+'/close/'+row_id\n\nfunction updateText(text) {\n  let row = source.data.find(o => o.id == element.parameter.row_id)\n  row[element.parameter.column_name] = text\n  context.projectManager.send('source.changed', source)\n}\n\nif ( text == \"open\" ) {\n  updateText(\"closing\")\n  // close shutter\n  request(close_url)\n}\n\nelse if ( text == \"closed\" ) {\n  updateText(\"opening\")\n  // open shutter\n  request(open_url)\n}\n"
    },
    "642abe6a-5eb4-4674-9332-78ee1e78e57c": {
      "id": "642abe6a-5eb4-4674-9332-78ee1e78e57c",
      "name": "Valve Style",
      "script": "/*\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element) {\n  // change bsStyle depending on the text\n  if( type == \"bsStyle\" ) {\n    if( element.parameter.text == \"open\" )\n      return \"success\"\n    else if( element.parameter.text == \"closed\" )\n      return \"danger\"\n    else if( element.parameter.text == \"opening\" || element.parameter.text == \"closing\" )\n      return \"info\"\n  }\n}\n"
    },
    "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32": {
      "id": "d8440eeb-d1e6-4afc-afd7-e5c983ab6b32",
      "name": "MFC Click Handler",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// MFC OnClickHandler\n// open a dialog\n// \ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id: \"f087a1cd-9769-455b-b10e-d6bafe877138\",\n  element: context.arg.element\n})"
    },
    "8a39008c-befa-4f08-998f-d8121db15c06": {
      "id": "8a39008c-befa-4f08-998f-d8121db15c06",
      "name": "Gauge Style",
      "script": "/*\n\"preRenderFilter\": \"8a39008c-befa-4f08-998f-d8121db15c06\",\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change textStyle depending on the value\n  if( type == \"textStyle\" ) {\n    let value = parseFloat(element.parameter.text)    \n    if ( !arg ) arg = {}\n    \n    if( value > 50 ) \n      arg.backgroundColor = \"red\"\n          \n    else \n      arg.backgroundColor = \"green\"\n\n    return arg\n  }\n\n  return arg\n}\n"
    },
    "bb21edfa-a50f-4f5c-be94-80f56de031c1": {
      "id": "bb21edfa-a50f-4f5c-be94-80f56de031c1",
      "name": "Pump Style",
      "script": "/*\n\"preRenderFilter\": \"bb21edfa-a50f-4f5c-be94-80f56de031c1\",\ncontext:\n  element,\n  filterFunc\n*/\n\ncontext.filterFunc = function(type, element, arg) {\n  // change textStyle depending on the value\n  if( type == \"textStyle\" ) {\n    let value = element.parameter.text\n    if ( !arg ) arg = {}\n    \n    if( value == \"Started\" ) \n      arg.backgroundColor = \"yellow\"\n\n    else if( value == \"Error\" ) \n      arg.backgroundColor = \"red\"\n                    \n    else \n      arg.backgroundColor = \"orange\"\n\n    return arg\n  }\n\n  return arg\n}\n"
    },
    "4ca966b9-aa32-4937-9cf9-2723d6c8805b": {
      "id": "4ca966b9-aa32-4937-9cf9-2723d6c8805b",
      "name": "Pump Click Handler",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// MFC OnClickHandler\n// open a dialog\n// \ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id:\"e04f2f3a-2726-4adc-9e8b-b4af808854d7\",\n  element: context.arg.element\n})"
    },
    "42109c56-10ef-4c27-8f23-22b281fe6f15": {
      "id": "42109c56-10ef-4c27-8f23-22b281fe6f15",
      "name": "Shutter Open / Close",
      "script": "/*\ncontext = {\narg, projectManager\n}\n*/\n//\n// MFC OnClickHandler\n// open a dialog\n// \ncontext.projectManager.send(\"dialog.show\", {\n  show: true,\n  id:\"9b4b42f8-ed1d-431a-a904-0f9e19d719c9\",\n  element: context.arg.element,\n  sources: context.projectManager.sources()\n})"
    }
  }
}